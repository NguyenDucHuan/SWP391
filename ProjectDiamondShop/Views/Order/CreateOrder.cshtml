@model DiamondShopDAOs.CookieCartDAO.CartDao

@{
    ViewBag.Title = "Create Order";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<link href="~/Content/Order/CreateOrder.css" rel="stylesheet" />

<div class="order-container">
    <h2><i class="fas fa-shopping-cart"></i> Create Order</h2>

    <div id="noteSection" class="alert alert-info" role="alert" style="display: none;">
        <strong>Please note:</strong> You will need to pay a 80% deposit before placing your order. Deposit amount: <span id="depositAmount"></span>
    </div>

    <div class="order-details">
        @foreach (var item in Model.Items)
        {
            string[] imagepart = item.imagePath.Split('|');
            <div class="order-item">
                <table class="table no-border-table">
                    <tbody>
                        <tr>
                            @if (item.settingID == 0)
                            {
                                <td class="item-details">
                                    <div class="item-image">
                                        <img src="@imagepart[0]" alt="Diamond Image" />
                                    </div>
                                    <div class="item-info">
                                        <strong>Diamond Name:</strong> @item.DiamondName <br />
                                        <strong>Diamond Price:</strong> @item.diamondPrice.ToString("C0")
                                    </div>
                                </td>
                            }
                            else
                            {
                                <td class="item-details">
                                    <div class="item-image">
                                        <img src="@imagepart[1]" alt="Diamond Image" />
                                    </div>
                                    <div class="item-info">
                                        <strong>Diamond Name:</strong> @item.DiamondName <br />
                                        <strong>Diamond Price:</strong> @item.diamondPrice.ToString("C0")
                                    </div>
                                </td>
                                <td class="item-details">
                                    <div class="item-image">
                                        <img src="@imagepart[0]" alt="Setting Image" />
                                    </div>
                                    <div class="item-info">
                                        <strong>Setting Name:</strong> @item.decription <br />
                                        <strong>Setting Price:</strong> @item.settingPrice.ToString("C0")
                                    </div>
                                </td>
                                <td class="item-details">
                                    <div class="item-image">
                                        <img src="@imagepart[2]" alt="Accent Stone Image" />
                                    </div>
                                    <div class="item-info">
                                        <strong>Accent Stone:</strong> @item.accentStoneID <br />
                                        <strong>Accent Stone Price:</strong> @item.accentStonePrice.ToString("C0") <br />
                                        <strong>Accent Stone Quantity:</strong> @item.quantityAccent
                                    </div>
                                </td>
                            }
                            <td class="item-total">
                                <strong>Total Price:</strong> @item.diamondPrice.ToString("C0")
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        }
    </div>

    <div class="customer-details">
        <div class="form-group">
            <label for="VoucherID">Voucher:</label>
            <select id="VoucherID" name="voucherID" class="form-control">
                <option value="">Select Voucher</option>
                @foreach (var voucher in ViewBag.Vouchers as List<DiamondShopBOs.tblVoucher>)
                {
                    <option value="@voucher.voucherID" data-discount="@voucher.discount">@voucher.voucherID - @voucher.discount %</option>
                }
            </select>
        </div>
        <div class="form-group" id="discountSection" style="display:none;">
            <p>You will get a discount of: $<span id="DiscountAmount"></span></p>
            <p>Total after discount: $<span id="DiscountedTotal"></span></p>
        </div>
        <div class="form-group">
            <label for="CustomerName">Customer Name:</label>
            <input type="text" id="CustomerName" name="customerName" class="form-control" placeholder="Enter Customer Name" required />
            <div id="customerNameError" class="error-message" style="display: none;">Please enter customer name.</div>
        </div>

        <div class="form-group">
            <label for="Address">Address:</label>
            <input type="text" id="Address" name="address" class="form-control" placeholder="Enter Address" required />
            <div id="addressError" class="error-message" style="display: none;">Please enter your address.</div>
        </div>
        <div class="form-group">
            <label for="Phone">Phone:</label>
            <input type="text" id="Phone" name="phone" class="form-control" placeholder="Enter Phone" required />
            <div id="phoneError" class="error-message" style="display: none;">Please enter your phone number.</div>
        </div>

        <div class="form-group">
            <label for="Note">Note:</label>
            <textarea id="Note" name="note" class="form-control" placeholder="Enter any notes here"></textarea>
        </div>

        <div class="form-group">
            <label for="Total">Total:</label>
            <input type="text" class="form-control" id="Total" value="@Model.Items.Sum(i => i.diamondPrice + i.settingPrice + (i.accentStonePrice * i.quantityAccent)).ToString("C0")" disabled />
        </div>
    </div>

    <div class="button-group">
        <button type="button" class="btn btn-voucher" onclick="applyVoucher()">Add Voucher</button>
        <button type="button" class="btn btn-primary" onclick="showPolicyModal()">Create Order</button>
    </div>

    <form id="paymentForm" action="/order/PaymentWithPayPal" method="post" style="display:none;">
        <input type="hidden" id="hiddenCustomerName" name="customerName" />
        <input type="hidden" id="hiddenAddress" name="address" />
        <input type="hidden" id="hiddenPhone" name="phone" />
        <input type="hidden" id="hiddenVoucherID" name="voucherID" />
        <input type="hidden" id="hiddenNote" name="note" />
    </form>

    <!-- Modal -->
    <div class="modal fade" id="policyModal" tabindex="-1" role="dialog" aria-labelledby="policyModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="policyModalLabel">Order Policy</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Our shop requires 80% payment in advance and the remaining 20% upon delivery. Please review our policy carefully before placing your order.</p>
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" id="acceptPolicy">
                        <label class="form-check-label" for="acceptPolicy">I accept the policy</label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" onclick="confirmPolicy()">Continue</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    let discountApplied = false;

    function applyVoucher() {
        if (discountApplied) {
            alert("The discount has already been applied.");
            return;
        }

        var voucherSelect = document.getElementById("VoucherID");
        var selectedOption = voucherSelect.options[voucherSelect.selectedIndex];
        var discount = parseFloat(selectedOption.getAttribute("data-discount")) || 0;
        var totalPriceElement = document.getElementById("Total");
        var totalPrice = parseFloat(totalPriceElement.value.replace("$", "").replace(",", ""));
        var note = document.getElementById("Note").value;

        if (!isNaN(discount) && !isNaN(totalPrice)) {
            var discountAmount = totalPrice * (discount / 100);
            var discountedTotal = totalPrice - discountAmount;

            document.getElementById("DiscountAmount").innerText = formatNumber(discountAmount);
            document.getElementById("DiscountedTotal").innerText = formatNumber(discountedTotal);

            totalPriceElement.value = "$" + formatNumber(discountedTotal); // Update the Total field with the $ symbol

            document.getElementById("discountSection").style.display = "block";
            discountApplied = true; // Set the flag to true after applying the discount
        } else {
            alert("Invalid discount or total price value.");
        }
    }

    function formatNumber(num) {
        return num.toLocaleString('en-US', {
            minimumFractionDigits: 0,
            maximumFractionDigits: 2
        });
    }

    function showPolicyModal() {
        var policyModal = new bootstrap.Modal(document.getElementById('policyModal'));
        policyModal.show();
    }

    function confirmPolicy() {
        var acceptPolicy = document.getElementById("acceptPolicy").checked;
        if (acceptPolicy) {
            var policyModal = bootstrap.Modal.getInstance(document.getElementById('policyModal'));
            policyModal.hide();
            validateForm();
        } else {
            alert("You must accept the policy to continue.");
        }
    }

    function validateForm() {
        var customerName = document.getElementById("CustomerName").value;
        var address = document.getElementById("Address").value;
        var phone = document.getElementById("Phone").value;
        var voucherID = document.getElementById("VoucherID").value;
        var note = document.getElementById("Note").value;

        if (customerName.trim() === "") {
            document.getElementById("customerNameError").style.display = "block";
            return false;
        } else {
            document.getElementById("customerNameError").style.display = "none";
        }
        if (address.trim() === "") {
            document.getElementById("addressError").style.display = "block";
            return false;
        } else {
            document.getElementById("addressError").style.display = "none";
        }

        if (phone.trim() === "") {
            document.getElementById("phoneError").style.display = "block";
            return false;
        } else {
            document.getElementById("phoneError").style.display = "none";
        }

        var totalPrice = parseFloat(document.getElementById("Total").value.replace("$", ""));
        var depositAmount = totalPrice * 0.2;
        document.getElementById("depositAmount").innerText = "$" + depositAmount.toFixed(2);

        document.getElementById("noteSection").style.display = "block";

        document.getElementById("hiddenCustomerName").value = customerName;
        document.getElementById("hiddenAddress").value = address;
        document.getElementById("hiddenPhone").value = phone;
        document.getElementById("hiddenVoucherID").value = voucherID;
        document.getElementById("hiddenNote").value = note;

        document.getElementById("paymentForm").submit();
    }

    function loadAccentStones() {
        $.ajax({
            url: '@Url.Action("GetAccentStones", "Diamonds")',
            type: 'GET',
            success: function (data) {
                var accentStoneSelect = $("#accentStone");
                accentStoneSelect.empty();
                accentStoneSelect.append('<option value="0" data-image="/path/to/default-image.jpg">No accent stone</option>');
                $.each(data, function (i, accentStone) {
                    accentStoneSelect.append('<option value="' + accentStone.accentStoneID + '" data-image="' + accentStone.imagePath + '">' + accentStone.shape + ' - ' + accentStone.caratWeight + 'ct</option>');
                });
            }
        });
    }
</script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
