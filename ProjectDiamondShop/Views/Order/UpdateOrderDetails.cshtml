@{
    var order = ViewBag.Order as DiamondShopBOs.tblOrder;
    var orderItems = ViewBag.OrderItems as List<DiamondShopDAOs.CookieCartDAO.ItemCartDAOSimple>;
    var statusUpdates = ViewBag.StatusUpdates as List<DiamondShopBOs.tblOrderStatusUpdate>;
    int roleId = (int)Session["RoleID"];
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8" />
    <title>Order Details and Update Status</title>
    <link rel="stylesheet" href="/Content/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="~/Content/Order/UpdateOrderDetails.css" />
</head>
<body>
    <div class="container">
        @if (TempData["UpdateMessage"] != null)
        {
            <div class="alert alert-success">
                @TempData["UpdateMessage"]
            </div>
        }

        <div class="box">
            <h2> Update Order Status</h2>
            @*<div class="status-progress">
                    @{
                        var statuses = new List<string> { "Order Placed", "Preparing Goods", "Shipped to Carrier", "In Delivery", "Delivered", "Paid" };
                        string lastCompletedStatus = statuses.TakeWhile(s => s != order.status).LastOrDefault();
                    }

                    <div class="status-item @(lastCompletedStatus == "Order Placed" || order.status == "Order Placed" ? "completed" : "")">
                        <i class="fas fa-shopping-cart icon"></i>
                        <div class="bar"></div>
                        <span class="status-text">Order Placed</span>
                    </div>
                    <div class="status-item @(lastCompletedStatus == "Preparing Goods" || order.status == "Preparing Goods" ? "completed" : "")">
                        <i class="fas fa-box icon"></i>
                        <div class="bar"></div>
                        <span class="status-text">Preparing Goods</span>
                    </div>
                    <div class="status-item @(lastCompletedStatus == "Shipped to Carrier" || order.status == "Shipped to Carrier" ? "completed" : "")">
                        <i class="fas fa-truck icon"></i>
                        <div class="bar"></div>
                        <span class="status-text">Shipped to Carrier</span>
                    </div>
                    <div class="status-item @(lastCompletedStatus == "In Delivery" || order.status == "In Delivery" ? "completed" : "")">
                        <i class="fas fa-shipping-fast icon"></i>
                        <div class="bar"></div>
                        <span class="status-text">In Delivery</span>
                    </div>
                    <div class="status-item @(lastCompletedStatus == "Delivered" || order.status == "Delivered" ? "completed" : "")">
                        <i class="fas fa-box-open icon"></i>
                        <div class="bar"></div>
                        <span class="status-text">Delivered</span>
                    </div>
                    <div class="status-item @(lastCompletedStatus == "Paid" || order.status == "Paid" ? "completed" : "")">
                        <i class="fas fa-receipt icon"></i>
                        <div class="bar"></div>
                        <span class="status-text">Paid</span>
                    </div>
                </div>*@

            <div class="status-progress">
                @{
                    var statuses = new List<string> { "Order Placed", "Preparing Goods", "Shipped to Carrier", "In Delivery", "Delivered", "Paid" };
                    bool isCompleted = true; // Đặt là true để đánh dấu các trạng thái trước đó là hoàn thành
                }

                @foreach (var status in statuses)
                {
                    if (status == order.status)
                    {
                        isCompleted = false; // Khi đến trạng thái hiện tại, không cần đánh dấu hoàn thành nữa
                    }
                    string statusClass = isCompleted || status == order.status ? "completed" : "";
                    string iconClass = "";

                    switch (status)
                    {
                        case "Order Placed":
                            iconClass = "fas fa-shopping-cart icon";
                            break;
                        case "Preparing Goods":
                            iconClass = "fas fa-box icon";
                            break;
                        case "Shipped to Carrier":
                            iconClass = "fas fa-truck icon";
                            break;
                        case "In Delivery":
                            iconClass = "fas fa-shipping-fast icon";
                            break;
                        case "Delivered":
                            iconClass = "fas fa-box-open icon";
                            break;
                        case "Paid":
                            iconClass = "fas fa-receipt icon";
                            break;
                    }
                    <div class="status-item @statusClass">
                        <i class="@iconClass"></i>
                        <div class="bar"></div>
                        <span class="status-text">@status</span>
                    </div>
                }
            </div>
            @if (roleId == 4 || roleId == 5)
            {
                <form action="@Url.Action("UpdateStatus", "Order")" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="orderId" value="@order.orderID" />
                    <div class="form-group">
                        <label for="status">Update Status</label>
                        <select class="form-control" id="status" name="status">
                            @if (roleId == 5)
                            {
                                <option value="Order Placed">Order Placed</option>
                                <option value="Preparing Goods">Preparing Goods</option>
                                <option value="Shipped to Carrier">Shipped to Carrier</option>
                                <option value="Paid">Paid</option>
                            }
                            else if (roleId == 4)
                            {
                                <option value="In Delivery">In Delivery</option>
                                <option value="Delivered">Delivered</option>
                            }
                        </select>
                    </div>
                    <button type="submit" class="btn btn-primary">Update Status</button>
                </form>
            }
            <div class="back-button">
                @if (roleId == 1)
                {
                    <form action="@Url.Action("ViewOrders", "Home")" method="get">
                        <button type="submit" class="btn btn-success">Back to Customer</button>
                    </form>
                }
                else if (roleId == 4)
                {
                    <form action="@Url.Action("Index", "DeliveryStaff")" method="get">
                        <button type="submit" class="btn btn-success">Back to Delivery Staff</button>
                    </form>
                }
                else if (roleId == 5)
                {
                    <form action="@Url.Action("Index", "SaleStaff")" method="get">
                        <button type="submit" class="btn btn-success">Back to Sale Staff</button>
                    </form>
                }
            </div>
        </div>

        <div class="box">
            <h2>Order Items</h2>
            @if (orderItems != null && orderItems.Any())
            {
                var itemCount = orderItems.Count;
                <div class="row row-cols-1 g-4">
                    @for (int i = 0; i < itemCount; i++)
                    {
                        var item = orderItems[i];
                        var isLastOddItem = (itemCount % 2 == 1) && (i == itemCount - 1);
                        <div class="col @(isLastOddItem ? "d-flex justify-content-center" : "")">
                            <div class="card horizontal-card h-100">
                                <img src="@item.imagePath.Split('|')[0]" class="card-img-top" alt="Product Image">
                                <div class="card-body">
                                    <h5 class="card-title">@item.DiamondName</h5>
                                    <p class="card-text">Diamond Price: $@(item.diamondPrice)</p>
                                    @if (item.settingID != 0)
                                    {
                                        <p class="card-text">Setting Name: @item.decription</p>
                                        <p class="card-text">Setting Price: $@item.settingPrice</p>
                                    }
                                    @if (item.accentStoneID != 0)
                                    {
                                        <p class="card-text">Accent Stone: @item.accentStoneID</p>
                                        <p class="card-text">Accent Stone Price: $@item.accentStonePrice</p>
                                        <p class="card-text">Accent Stone Quantity: @item.quantityAccent</p>
                                    }
                                    <p class="card-text"><strong>Total Price: $@(item.diamondPrice + item.settingPrice + item.accentStonePrice * item.quantityAccent)</strong></p>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <div class="mt-4 text-end">
                    <p class="h5">Total: $@orderItems.Sum(i => i.diamondPrice + i.settingPrice + i.accentStonePrice * i.quantityAccent)</p>
                </div>
            }
            else
            {
                <p>No items found in the order.</p>
            }
        </div>

        <div class="box">
            <h2>Date Update Status</h2>
            <ul class="timeline">
                @if (statusUpdates != null && statusUpdates.Any())
                {
                    foreach (var statusUpdate in statusUpdates)
                    {
                        <li>
                            <strong>@statusUpdate.status</strong>
                            <p>@statusUpdate.updateTime.ToString("g")</p>
                        </li>
                    }
                }
                else
                {
                    <p>No status updates found.</p>
                }
            </ul>
        </div>
    </div>
</body>
</html>
