@model DiamondShopBOs.OrderViewModel

@{
    ViewBag.Title = "View Orders";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8" />
    <title>@ViewBag.Title</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/Content/ViewOrder.css" />
</head>
<body>
    <div class="container container-custom text-center">
        <h2 class="mt-4 diamond-title">View Orders</h2>

        <div class="nav-buttons mb-4">
            <div class="btn-group">
                <button type="button" class="btn btn-primary" onclick="showSection('currentOrders')">Current Orders</button>
                <button type="button" class="btn btn-primary" onclick="showSection('orderHistory')">Order History</button>
            </div>
        </div>

        <div id="currentOrders" class="section active">
            <h3>Current Orders</h3>
            <input type="text" id="searchCurrentOrders" class="form-control mb-3" onkeyup="searchTable('currentOrdersTable', 'searchCurrentOrders', 0)" placeholder="Search for orders by OrderID..">
            <div class="table-container">
                <table id="currentOrdersTable" class="table table-striped table-bordered table-dark">
                    <thead>
                        <tr>
                            <th>Order ID</th>
                            <th>Receiver</th>
                            <th>Delivery Staff</th>
                            <th>Paid Money</th>
                            <th>Remaining Money</th>
                            <th>Total Money</th>
                            <th>Ship To</th>
                            <th>Phone Number</th>
                            <th>Status</th>
                            <th>Warranty Code</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var order in Model.currentOrders)
                        {
                            <tr>
                                <td>@order.orderID</td>
                                <td>@order.customerName</td>
                                <td>@order.deliveryStaffName</td>
                                <td>$@String.Format("{0:N0}", order.paidAmount)</td>
                                <td>$@String.Format("{0:N0}", order.remainingAmount)</td>
                                <td>$@String.Format("{0:N0}", order.totalMoney)</td>
                                <td>@order.address</td>
                                <td>@order.phone</td>
                                <td>@order.status</td>
                                <td>
                                    @{
                                        var warrantyCodes = ViewBag.Warranties[order.orderID];
                                        var warrantyCodesStr = string.Join(" || ", warrantyCodes);
                                    }
                                    @warrantyCodesStr
                                </td>
                                <td>
                                    <a href="@Url.Action("UpdateOrderDetails", "Order", new { orderId = order.orderID })" class="btn btn-info">View Order</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="pagination-container">
                <ul class="pagination">
                    @for (int i = 1; i <= Math.Ceiling((double)ViewBag.TotalCurrentOrders / ViewBag.PageSize); i++)
                    {
                        <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("ViewOrders", new { page = i, pageSize = ViewBag.PageSize })">@i</a>
                        </li>
                    }
                </ul>
            </div>
        </div>

        <div id="orderHistory" class="section">
            <h3>Order History</h3>
            <input type="text" id="searchHistoryOrders" class="form-control mb-3" onkeyup="searchTable('historyOrdersTable', 'searchHistoryOrders', 0)" placeholder="Search for orders by OrderID..">
            <div class="table-container">
                <table id="historyOrdersTable" class="table table-striped table-bordered table-dark">
                    <thead>
                        <tr>
                            <th>Order ID</th>
                            <th>Receiver</th>
                            <th>Delivery Staff</th>
                            <th>Paid Money</th>
                            <th>Remaining Money</th>
                            <th>Total Money</th>
                            <th>Ship To</th>
                            <th>Phone Number</th>
                            <th>Status</th>
                            <th>Warranty Code</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var order in Model.historyOrder)
                        {
                            <tr>
                                <td>@order.orderID</td>
                                <td>@order.customerName</td>
                                <td>@order.deliveryStaffName</td>
                                <td>$@String.Format("{0:N0}", order.paidAmount)</td>
                                <td>$@String.Format("{0:N0}", order.remainingAmount)</td>
                                <td>$@String.Format("{0:N0}", order.totalMoney)</td>
                                <td>@order.address</td>
                                <td>@order.phone</td>
                                <td>@order.status</td>
                                <td>
                                    @{
                                        var warrantyCodes = ViewBag.Warranties[order.orderID];
                                        var warrantyCodesStr = string.Join(" || ", warrantyCodes);
                                    }
                                    @warrantyCodesStr
                                </td>
                                <td>
                                    <a href="@Url.Action("UpdateOrderDetails", "Order", new { orderId = order.orderID })" class="btn btn-info">View Order</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="pagination-container">
                <ul class="pagination">
                    @for (int i = 1; i <= Math.Ceiling((double)ViewBag.TotalHistoryOrders / ViewBag.PageSize); i++)
                    {
                        <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("ViewOrders", new { page = i, pageSize = ViewBag.PageSize })">@i</a>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>

    <script>
        function showSection(sectionId) {
            var sections = document.getElementsByClassName('section');
            for (var i = 0; i < sections.length; i++) {
                sections[i].classList.remove('active');
                sections[i].style.display = 'none';
            }
            var section = document.getElementById(sectionId);
            section.classList.add('active');
            section.style.display = 'block';
        }
        function searchTable(tableId, searchId, columnIndex) {
            var input, filter, table, tr, td, i, txtValue;
            input = document.getElementById(searchId);
            filter = input.value.toUpperCase();
            table = document.getElementById(tableId);
            tr = table.getElementsByTagName("tr");

            for (i = 1; i < tr.length; i++) {
                tr[i].style.display = "none";
                td = tr[i].getElementsByTagName("td")[columnIndex];
                if (td) {
                    txtValue = td.textContent || td.innerText;
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = "";
                    }
                }
            }
        }

        // Initialize sections display
        document.addEventListener('DOMContentLoaded', function () {
            showSection('currentOrders');
        });
    </script>
</body>
</html>
