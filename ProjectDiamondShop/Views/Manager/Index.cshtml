@{
    ViewBag.Title = "Manager Dashboard";
}

<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>@ViewBag.Title</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KyZXEAg3QhqLMpG8r+Knujsl5/1hb5ZV5Z5x5s39D5p6CBt/b5L5l5+s5W6j15W5" crossorigin="anonymous">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet" integrity="sha384-jLKHWMHpbDwex0ilUmPO96Mc6A+K6sbckjXAM5c28Ik19a++q2y6t7L6zK3s7F2M" crossorigin="anonymous">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons+Sharp" rel="stylesheet">
    <link href="~/Content/Manager/Site.css?v=1.0" rel="stylesheet" />
    <link rel="icon" type="image/png" href="~/Content/Icons/diamond (1).png" />
</head>

<body>
    <div class="container">
        <aside>
            <div class="toggle">
                <div class="logo">
                    <h2>The Diamond<span class="danger">Shop</span></h2>
                </div>
                <div class="close" id="close-btn">
                    <span class="material-icons-sharp">close</span>
                </div>
            </div>
            <div class="sidebar">
                <a href="javascript:void(0)" onclick="showSection('dashboard')">
                    <span class="material-icons-sharp">dashboard</span>
                    <span class="sidebar-text">Dashboard</span>
                </a>
                @if ((int)Session["RoleID"] == 3)
                {
                    <a href="javascript:void(0)" onclick="showSection('orders')"><i class="fas fa-box"></i> <span class="sidebar-text">Orders</span></a>
                    <a href="javascript:void(0)" onclick="showSection('diamonds')"><i class="fas fa-gem"></i> <span class="sidebar-text">Diamonds</span></a>
                    <a href="javascript:void(0)" onclick="showSection('viewVoucher')"><i class="fas fa-eye"></i> <span class="sidebar-text">View Voucher</span></a>
                    <a href="javascript:void(0)" onclick="showSection('saleStaff')"><i class="fas fa-user-tie"></i> <span class="sidebar-text">Sale Staff</span></a>
                    <a href="javascript:void(0)" onclick="showSection('deliveryStaff')"><i class="fas fa-shipping-fast"></i> <span class="sidebar-text">Delivery Staff</span></a>
                    <a href="javascript:void(0)" onclick="showSection('accentStones')"><i class="fas fa-gem"></i> <span class="sidebar-text">Accent Stones</span></a>
                    <a href="javascript:void(0)" onclick="showSection('settings')"><i class="fas fa-cogs"></i> <span class="sidebar-text">Settings</span></a>
                    <a href="javascript:void(0)" onclick="showSection('notifications')"><i class="fas fa-bell"></i> <span class="sidebar-text">Notifications</span></a>
                    <a href="javascript:void(0)" onclick="showSection('warranty')"><i class="fas fa-shield-alt"></i> <span class="sidebar-text">Warranty</span></a>
                }
                @if ((int)Session["RoleID"] == 2)
                {
                    <a href="javascript:void(0)" onclick="showSection('orders')"><i class="fas fa-box"></i> <span class="sidebar-text">Orders</span></a>
                    <a href="javascript:void(0)" onclick="showSection('diamonds')"><i class="fas fa-gem"></i> <span class="sidebar-text">Diamonds</span></a>
                    <a href="javascript:void(0)" onclick="showSection('viewVoucher')"><i class="fas fa-eye"></i> <span class="sidebar-text">View Voucher</span></a>
                    <a href="javascript:void(0)" onclick="showSection('saleStaff')"><i class="fas fa-user-tie"></i> <span class="sidebar-text">Sale Staff</span></a>
                    <a href="javascript:void(0)" onclick="showSection('deliveryStaff')"><i class="fas fa-shipping-fast"></i> <span class="sidebar-text">Delivery Staff</span></a>
                    <a href="javascript:void(0)" onclick="showSection('accentStones')"><i class="fas fa-gem"></i> <span class="sidebar-text">Accent Stones</span></a>
                    <a href="javascript:void(0)" onclick="showSection('settings')"><i class="fas fa-cogs"></i> <span class="sidebar-text">Settings</span></a>
                    <a href="javascript:void(0)" onclick="showSection('users')"><i class="fas fa-users"></i> <span class="sidebar-text">Users</span></a>
                    <a href="javascript:void(0)" onclick="showSection('notifications')"><i class="fas fa-bell"></i> <span class="sidebar-text">Notifications</span></a>
                    <a href="javascript:void(0)" onclick="showSection('warranty')"><i class="fas fa-shield-alt"></i> <span class="sidebar-text">Warranty</span></a>
                    <a href="javascript:void(0)" onclick="showSection('createAccount')"><i class="fas fa-user-plus"></i> <span class="sidebar-text">Create Account</span></a>
                }
                <a href="@Url.Action("CreateVoucher", "Manager")"><i class="fas fa-ticket-alt"></i> <span class="sidebar-text">Create Voucher</span></a>
                <a href="@Url.Action("AddDiamond", "Diamonds")"><i class="fas fa-plus-circle"></i> <span class="sidebar-text">Add New Diamonds</span></a>
                <a href="@Url.Action("AddSetting", "Manager")"><i class="fas fa-ring"></i> <span class="sidebar-text">Add New Settings</span></a>
                <a href="@Url.Action("AddAccentStone", "Manager")"><i class="fas fa-gem"></i> <span class="sidebar-text">Add New Accent Stones</span></a>
                <a href="@Url.Action("Logout", "Account")"><i class="fas fa-sign-out-alt"></i> <span class="sidebar-text">Logout</span></a>
            </div>
        </aside>

        <main class="main-content">
            <div id="updateSuccessMessage" class="alert alert-success" style="display:none;">@TempData["SuccessMessage"]</div>
            <div id="updateErrorMessage" class="alert alert-danger" style="display:none;">@TempData["ErrorMessage"]</div>

            <div id="dashboard" class="section" style="display: block; overflow:auto;">
                @if ((int)Session["RoleID"] == 3)
                {
                    <div>
                        <h3>Revenue Chart</h3>
                        <canvas id="revenueChart" class="w-100"></canvas>
                    </div>
                }
                @if ((int)Session["RoleID"] == 2)
                {
                    <div>
                        <h3>Revenue Chart</h3>
                        <canvas id="revenueChart" class="w-100"></canvas>
                    </div>
                    <div>
                        <h3>Registration Chart</h3>
                        <canvas id="registrationChart" class="w-100"></canvas>
                    </div>
                }
            </div>

            <div id="orders" class="section">
                <h3>Orders</h3>
                <div class="search-container">
                    <i class="fa fa-search search-icon" data-input="searchOrders" data-table="ordersTable" data-column="0" onclick="toggleSearch(this)"></i>
                    <input type="text" id="searchOrders" class="form-control mb-3 search-input" onkeyup="searchTable('ordersTable', 'searchOrders', 0)" placeholder="Search for orders..">
                </div>
                <div class="table-container">
                    <table id="ordersTable" class="table-excel">
                        <thead>
                            <tr>
                                <th>
                                    Order ID
                                </th>
                                <th>
                                    Customer Name
                                    <button class="sort-button" data-table="ordersTable" data-column="1" data-direction="asc" onclick="sortTable('ordersTable', 1, 'asc')">▲</button>
                                    <button class="sort-button" data-table="ordersTable" data-column="1" data-direction="desc" onclick="sortTable('ordersTable', 1, 'desc')">▼</button>
                                </th>
                                <th class="wide-column">Sale Staff</th>
                                <th class="wide-column">Delivery Staff</th>
                                <th>
                                    Total Money
                                    <button class="sort-button" data-table="ordersTable" data-column="4" data-direction="asc" onclick="sortTable('ordersTable', 4, 'asc', true)">▲</button>
                                    <button class="sort-button" data-table="ordersTable" data-column="4" data-direction="desc" onclick="sortTable('ordersTable', 4, 'desc', true)">▼</button>
                                </th>
                                <th class="wide-column">Status</th>
                                <th>Address</th>
                                <th>Phone</th>
                                <th>
                                    Sale Date
                                    <button class="sort-button" data-table="ordersTable" data-column="8" data-direction="asc" onclick="sortTable('ordersTable', 8, 'asc')">▲</button>
                                    <button class="sort-button" data-table="ordersTable" data-column="8" data-direction="desc" onclick="sortTable('ordersTable', 8, 'desc')">▼</button>
                                </th>
                                <th>Warranty Code</th>
                                <th>Order details</th>
                                <th>Note</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < ViewBag.Orders.Count; i++)
                            {
                                var order = ViewBag.Orders[i];
                                <tr>
                                    <td>@order.orderID</td>
                                    <td>@order.customerName</td>
                                    <td>
                                        <select class="form-control saleStaff" name="orderUpdates[@i].SaleStaffID" data-original="@order.saleStaffID">
                                            <option value="">Default</option>
                                            @foreach (var staff in ViewBag.SaleStaff)
                                            {
                                                <option value="@staff.userID" @(order.saleStaffID == staff.userID ? "selected" : "")>@staff.fullName (@staff.userID)</option>
                                            }
                                        </select>
                                        <input type="hidden" name="orderUpdates[@i].OrderID" value="@order.orderID" />
                                    </td>
                                    <td>
                                        <select class="form-control deliveryStaff" name="orderUpdates[@i].DeliveryStaffID" data-original="@order.deliveryStaffID">
                                            <option value="">Default</option>
                                            @foreach (var staff in ViewBag.DeliveryStaff)
                                            {
                                                <option value="@staff.userID" @(order.deliveryStaffID == staff.userID ? "selected" : "")>@staff.fullName (@staff.userID)</option>
                                            }
                                        </select>
                                    </td>
                                    <td>$@String.Format("{0:N0}", order.totalMoney)</td>
                                    <td>
                                        <select class="form-control status" name="orderUpdates[@i].Status" data-original="@order.status">
                                            <option value="Order Placed" @(order.status == "Order Placed" ? "selected" : "")>Order Placed</option>
                                            <option value="Preparing Goods" @(order.status == "Preparing Goods" ? "selected" : "")>Preparing Goods</option>
                                            <option value="Shipped to Carrier" @(order.status == "Shipped to Carrier" ? "selected" : "")>Shipped to Carrier</option>
                                            <option value="In Delivery" @(order.status == "In Delivery" ? "selected" : "")>In Delivery</option>
                                            <option value="Delivered" @(order.status == "Delivered" ? "selected" : "")>Delivered</option>
                                            <option value="Paid" @(order.status == "Paid" ? "selected" : "")>Paid</option>
                                        </select>
                                    </td>
                                    <td>@order.address</td>
                                    <td>@order.phone</td>
                                    <td>@order.saleDate</td>
                                    <td>
                                        @{
                                            var warrantyCodes = new List<string>();
                                            foreach (var warranty in ViewBag.Warranties)
                                            {
                                                if (warranty.orderID == order.orderID)
                                                {
                                                    warrantyCodes.Add(warranty.warrantyCode);
                                                }
                                            }
                                            var warrantyCodesStr = string.Join(" || ", warrantyCodes);
                                        }
                                        @warrantyCodesStr
                                    </td>
                                    <td>
                                        <a href="@Url.Action("UpdateOrderDetails", "Order", new { orderId = order.orderID })" class="btn btn-info">Order details</a>
                                    </td>
                                    <td>@order.Note</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <button type="button" class="btn btn-primary mt-3" onclick="updateOrders()">Update Orders</button>
                <div class="pagination">
                    <ul class="pagination">
                        @if (ViewBag.TotalOrders != null && ViewBag.OrderPageSize != null)
                        {
                            int totalOrderPages = (int)Math.Ceiling((double)ViewBag.TotalOrders / ViewBag.OrderPageSize);
                            for (int i = 1; i <= totalOrderPages; i++)
                            {
                                <li class="page-item @(ViewBag.CurrentOrderPage == i ? "active" : "")">
                                    <a class="btn-link" href="javascript:void(0);" onclick="loadOrdersPage(@i, @ViewBag.OrderPageSize)">@i</a>
                                </li>
                            }
                        }
                    </ul>
                </div>
            </div>

            <div id="diamonds" class="section">
                <h3>Diamonds</h3>
                <div class="search-container">
                    <i class="fa fa-search search-icon" data-input="searchDiamonds" data-table="diamondsTable" data-column="0" onclick="toggleSearch(this)"></i>
                    <input type="text" id="searchDiamonds" class="form-control mb-3 search-input" onkeyup="searchTable('diamondsTable', 'searchDiamonds', 0)" placeholder="Search for diamonds..">
                </div>

                <div class="table-container" id="diamondsContent">
                    <table id="diamondsTable" class="table-excel">
                        <thead>
                            <tr>
                                <th>
                                    ID
                                </th>
                                <th>
                                    Name
                                    <button class="sort-button" data-table="diamondsTable" data-column="1" data-direction="asc" onclick="sortTable('diamondsTable', 1, 'asc')">▲</button>
                                    <button class="sort-button" data-table="diamondsTable" data-column="1" data-direction="desc" onclick="sortTable('diamondsTable', 1, 'desc')">▼</button>
                                </th>
                                <th>
                                    Price
                                    <button class="sort-button" data-table="diamondsTable" data-column="2" data-direction="asc" onclick="sortTable('diamondsTable', 2, 'asc', true)">▲</button>
                                    <button class="sort-button" data-table="diamondsTable" data-column="2" data-direction="desc" onclick="sortTable('diamondsTable', 2, 'desc', true)">▼</button>
                                </th>
                                <th>Description</th>
                                <th>
                                    Carat Weight
                                    <button class="sort-button" data-table="diamondsTable" data-column="4" data-direction="asc" onclick="sortTable('diamondsTable', 4, 'asc')">▲</button>
                                    <button class="sort-button" data-table="diamondsTable" data-column="4" data-direction="desc" onclick="sortTable('diamondsTable', 4, 'desc')">▼</button>
                                </th>
                                <th>Clarity</th>
                                <th>Cut</th>
                                <th>Color</th>
                                <th>Shape</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var diamond in ViewBag.Diamonds)
                            {
                                <tr id="diamond-row-@diamond.diamondID">
                                    <td>@diamond.diamondID</td>
                                    <td>@diamond.diamondName</td>
                                    <td>$@String.Format("{0:N0}", diamond.diamondPrice)</td>
                                    <td>@diamond.diamondDescription</td>
                                    <td>@diamond.caratWeight</td>
                                    <td>@diamond.clarityID</td>
                                    <td>@diamond.cutID</td>
                                    <td>@diamond.colorID</td>
                                    <td>@diamond.shapeID</td>
                                    <td>
                                        @if ((int)Session["RoleID"] == 2 || (int)Session["RoleID"] == 3)
                                        {
                                            <button class="btn btn-status @(diamond.status ? "btn-success" : "btn-danger")" onclick="toggleDiamondStatus('@diamond.diamondID', @diamond.status)">
                                                @(diamond.status ? "Enable" : "Disable")
                                            </button>
                                        }
                                        else
                                        {
                                            @diamond.status
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="pagination">
                    <ul class="pagination">
                        @if (ViewBag.TotalDiamonds != null && ViewBag.PageSize != null)
                        {
                            int totalPages = (int)Math.Ceiling((double)ViewBag.TotalDiamonds / ViewBag.PageSize);
                            for (int i = 1; i <= totalPages; i++)
                            {
                                <li class="page-item @(ViewBag.CurrentPage == i ? "active" : "")">
                                    <a class="btn-link" href="javascript:void(0);" onclick="loadDiamondsPage(@i, @ViewBag.PageSize)">@i</a>
                                </li>
                            }
                        }
                    </ul>
                </div>
            </div>

            <div id="viewVoucher" class="section">
                <h3>View Voucher</h3>
                <div class="table-container">
                    <table id="vouchersTable" class="table-excel">
                        <thead>
                            <tr>
                                <th>Voucher ID</th>
                                <th>
                                    Start Time
                                    <button class="sort-button" data-table="vouchersTable" data-column="1" data-direction="asc" onclick="sortTable('vouchersTable', 1, 'asc')">▲</button>
                                    <button class="sort-button" data-table="vouchersTable" data-column="1" data-direction="desc" onclick="sortTable('vouchersTable', 1, 'desc')">▼</button>
                                </th>
                                <th>
                                    End Time
                                    <button class="sort-button" data-table="vouchersTable" data-column="2" data-direction="asc" onclick="sortTable('vouchersTable', 2, 'asc')">▲</button>
                                    <button class="sort-button" data-table="vouchersTable" data-column="2" data-direction="desc" onclick="sortTable('vouchersTable', 2, 'desc')">▼</button>
                                </th>
                                <th>
                                    Discount
                                    <button class="sort-button" data-table="vouchersTable" data-column="3" data-direction="asc" onclick="sortTable('vouchersTable', 3, 'asc')">▲</button>
                                    <button class="sort-button" data-table="vouchersTable" data-column="3" data-direction="desc" onclick="sortTable('vouchersTable', 3, 'desc')">▼</button>
                                </th>
                                <th>
                                    Quantity
                                    <button class="sort-button" data-table="vouchersTable" data-column="4" data-direction="asc" onclick="sortTable('vouchersTable', 4, 'asc')">▲</button>
                                    <button class="sort-button" data-table="vouchersTable" data-column="4" data-direction="desc" onclick="sortTable('vouchersTable', 4, 'desc')">▼</button>
                                </th>
                                <th>Target User ID</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var voucher in ViewBag.Vouchers)
                            {
                                <tr id="voucher-row-@voucher.voucherID">
                                    <td>@voucher.voucherID</td>
                                    <td>@voucher.startTime</td>
                                    <td>@voucher.endTime</td>
                                    <td>@voucher.discount</td>
                                    <td>@voucher.quantity</td>
                                    <td>@voucher.targetUserID</td>
                                    <td>
                                        <button class="btn btn-status @(voucher.status == true ? "btn-success" : "btn-danger")" onclick="toggleVoucherStatus(@voucher.voucherID, @voucher.status)">
                                            @(voucher.status == true ? "Enable" : "Disable")
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="pagination">
                    <ul class="pagination">
                        @if (ViewBag.TotalVouchers != null && ViewBag.VoucherPageSize != null)
                        {
                            int totalVoucherPages = (int)Math.Ceiling((double)ViewBag.TotalVouchers / ViewBag.VoucherPageSize);
                            for (int i = 1; i <= totalVoucherPages; i++)
                            {
                                <li class="page-item @(ViewBag.CurrentVoucherPage == i ? "active" : "")">
                                    <a class="btn-link" href="javascript:void(0);" onclick="loadVouchersPage(@i, @ViewBag.VoucherPageSize)">@i</a>
                                </li>
                            }
                        }
                    </ul>
                </div>
            </div>

            <div id="accentStones" class="section">
                <h3>Accent Stones</h3>
                <div class="search-container">
                    <i class="fa fa-search search-icon" data-input="searchAccentStones" data-table="accentStonesTable" data-column="0" onclick="toggleSearch(this)"></i>
                    <input type="text" id="searchAccentStones" class="form-control mb-3 search-input" onkeyup="searchTable('accentStonesTable', 'searchAccentStones', 0)" placeholder="Search for accent stones..">
                </div>
                <div class="table-container">
                    <table id="accentStonesTable" class="table-excel">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>
                                    Name
                                    <button class="sort-button" data-table="accentStonesTable" data-column="1" data-direction="asc" onclick="sortTable('accentStonesTable', 1, 'asc')">▲</button>
                                    <button class="sort-button" data-table="accentStonesTable" data-column="1" data-direction="desc" onclick="sortTable('accentStonesTable', 1, 'desc')">▼</button>
                                </th>
                                <th>
                                    Shape
                                </th>
                                <th>
                                    Carat Weight
                                    <button class="sort-button" data-table="accentStonesTable" data-column="3" data-direction="asc" onclick="sortTable('accentStonesTable', 3, 'asc')">▲</button>
                                    <button class="sort-button" data-table="accentStonesTable" data-column="3" data-direction="desc" onclick="sortTable('accentStonesTable', 3, 'desc')">▼</button>
                                </th>
                                <th>
                                    Clarity
                                </th>
                                <th>
                                    Color
                                    <button class="sort-button" data-table="accentStonesTable" data-column="5" data-direction="asc" onclick="sortTable('accentStonesTable', 5, 'asc')">▲</button>
                                    <button class="sort-button" data-table="accentStonesTable" data-column="5" data-direction="desc" onclick="sortTable('accentStonesTable', 5, 'desc')">▼</button>
                                </th>
                                <th>
                                    Price
                                    <button class="sort-button" data-table="accentStonesTable" data-column="6" data-direction="asc" onclick="sortTable('accentStonesTable', 6, 'asc', true)">▲</button>
                                    <button class="sort-button" data-table="accentStonesTable" data-column="6" data-direction="desc" onclick="sortTable('accentStonesTable', 6, 'desc', true)">▼</button>
                                </th>
                                <th>
                                    Quantity
                                    <button class="sort-button" data-table="accentStonesTable" data-column="7" data-direction="asc" onclick="sortTable('accentStonesTable', 7, 'asc')">▲</button>
                                    <button class="sort-button" data-table="accentStonesTable" data-column="7" data-direction="desc" onclick="sortTable('accentStonesTable', 7, 'desc')">▼</button>
                                </th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var stone in ViewBag.AccentStones)
                            {
                                <tr id="accentStone-row-@stone.accentStoneID">
                                    <td>@stone.accentStoneID</td>
                                    <td>@stone.accentStonesName</td>
                                    <td>@stone.shape</td>
                                    <td>@stone.caratWeight</td>
                                    <td>@stone.clarity</td>
                                    <td>@stone.color</td>
                                    <td>$@String.Format("{0:N0}", stone.price)</td>
                                    <td>@stone.quantity</td>
                                    <td>
                                        @if ((int)Session["RoleID"] == 2 || (int)Session["RoleID"] == 3)
                                        {
                                            <button class="btn btn-status @(stone.status ? "btn-success" : "btn-danger")" onclick="toggleAccentStoneStatus('@stone.accentStoneID', @stone.status)">
                                                @(stone.status ? "Enable" : "Disable")
                                            </button>
                                        }
                                        else
                                        {
                                            @stone.status
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="pagination">
                    <ul class="pagination">
                        @if (ViewBag.TotalAccentStones != null && ViewBag.AccentStonePageSize != null)
                        {
                            int totalAccentStonePages = (int)Math.Ceiling((double)ViewBag.TotalAccentStones / ViewBag.AccentStonePageSize);
                            for (int i = 1; i <= totalAccentStonePages; i++)
                            {
                                <li class="page-item @(ViewBag.CurrentAccentStonePage == i ? "active" : "")">
                                    <a class="btn-link" href="javascript:void(0);" onclick="loadAccentStonesPage(@i, @ViewBag.AccentStonePageSize)">@i</a>
                                </li>
                            }
                        }
                    </ul>
                </div>
            </div>


            <div id="settings" class="section">
                <h3>Settings</h3>
                <div class="search-container">
                    <i class="fa fa-search search-icon" data-input="searchSettings" data-table="settingsTable" data-column="0" onclick="toggleSearch(this)"></i>
                    <input type="text" id="searchSettings" class="form-control mb-3 search-input" onkeyup="searchTable('settingsTable', 'searchSettings', 0)" placeholder="Search for settings..">
                </div>
                <div class="table-container">
                    <table id="settingsTable" class="table-excel">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Type</th>
                                <th>Material</th>
                                <th>
                                    Price
                                    <button class="sort-button" data-table="settingsTable" data-column="3" data-direction="asc" onclick="sortTable('settingsTable', 3, 'asc')">▲</button>
                                    <button class="sort-button" data-table="settingsTable" data-column="3" data-direction="desc" onclick="sortTable('settingsTable', 3, 'desc')">▼</button>
                                </th>
                                <th>
                                    Quantity Stones
                                    <button class="sort-button" data-table="settingsTable" data-column="4" data-direction="asc" onclick="sortTable('settingsTable', 4, 'asc')">▲</button>
                                    <button class="sort-button" data-table="settingsTable" data-column="4" data-direction="desc" onclick="sortTable('settingsTable', 4, 'desc')">▼</button>
                                </th>
                                <th>Description</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var setting in ViewBag.Settings)
                            {
                                <tr id="setting-row-@setting.settingID">
                                    <td>@setting.settingID</td>
                                    <td>@setting.settingType</td>
                                    <td>@setting.material</td>
                                    <td>$@String.Format("{0:N0}", setting.priceTax)</td>
                                    <td>@setting.quantityStones</td>
                                    <td>@setting.description</td>
                                    <td>
                                        @if ((int)Session["RoleID"] == 2 || (int)Session["RoleID"] == 3)
                                        {
                                            <button class="btn btn-status @(setting.status ? "btn-success" : "btn-danger")" onclick="toggleSettingStatus('@setting.settingID', @setting.status)">
                                                @(setting.status ? "Enable" : "Disable")
                                            </button>
                                        }
                                        else
                                        {
                                            @setting.status
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="pagination">
                    <ul class="pagination">
                        @if (ViewBag.TotalSettings != null && ViewBag.SettingPageSize != null)
                        {
                            int totalSettingPages = (int)Math.Ceiling((double)ViewBag.TotalSettings / ViewBag.SettingPageSize);
                            for (int i = 1; i <= totalSettingPages; i++)
                            {
                                <li class="page-item @(ViewBag.CurrentSettingPage == i ? "active" : "")">
                                    <a class="btn-link" href="javascript:void(0);" onclick="loadSettingsPage(@i, @ViewBag.SettingPageSize)">@i</a>
                                </li>
                            }
                        }
                    </ul>
                </div>
            </div>


            <div id="saleStaff" class="section">
                <h3>Sale Staff</h3>
                <div class="search-container">
                    <i class="fa fa-search search-icon" data-input="searchSaleStaff" data-table="saleStaffTable" data-column="0" onclick="toggleSearch(this)"></i>
                    <input type="text" id="searchSaleStaff" class="form-control mb-3 search-input" onkeyup="searchTable('saleStaffTable', 'searchSaleStaff', 0)" placeholder="Search for sale staff..">
                </div>
                <div class="table-container">
                    <table id="saleStaffTable" class="table-excel">
                        <thead>
                            <tr>
                                <th>User ID</th>
                                <th>User Name</th>
                                <th>
                                    Full Name
                                    <button class="sort-button" data-table="saleStaffTable" data-column="2" data-direction="asc" onclick="sortTable('saleStaffTable', 2, 'asc')">▲</button>
                                    <button class="sort-button" data-table="saleStaffTable" data-column="2" data-direction="desc" onclick="sortTable('saleStaffTable', 2, 'desc')">▼</button>
                                </th>
                                <th>Email</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in ViewBag.SaleStaff)
                            {
                                <tr id="user-row-@user.userID">
                                    <td>@user.userID</td>
                                    <td>@user.userName</td>
                                    <td>@user.fullName</td>
                                    <td>@user.email</td>
                                    <td>
                                        @if ((int)Session["RoleID"] == 2)
                                        {
                                            <button class="btn btn-status @(user.status ? "btn-success" : "btn-danger")" onclick="toggleStatus('@user.userID', @user.status)">
                                                @(user.status ? "Enable" : "Disable")
                                            </button>
                                        }
                                        else
                                        {
                                            @user.status
                                        }
                                    </td>
                                </tr>
                            }

                        </tbody>
                    </table>
                </div>
                <div class="pagination">
                    <ul class="pagination">
                        @if (ViewBag.TotalSettings != null && ViewBag.SettingPageSize != null)
                        {
                            int totalSettingPages = (int)Math.Ceiling((double)ViewBag.TotalSettings / ViewBag.SettingPageSize);
                            for (int i = 1; i <= totalSettingPages; i++)
                            {
                                <li class="page-item @(ViewBag.CurrentSettingPage == i ? "active" : "")">
                                    <a class="btn-link" href="javascript:void(0);" onclick="loadSettingsPage(@i, @ViewBag.SettingPageSize)">@i</a>
                                </li>
                            }
                        }
                    </ul>
                </div>
            </div>


            <div id="deliveryStaff" class="section">
                <h3>Delivery Staff</h3>
                <div class="search-container">
                    <i class="fa fa-search search-icon" data-input="searchDeliveryStaff" data-table="deliveryStaffTable" data-column="0" onclick="toggleSearch(this)"></i>
                    <input type="text" id="searchDeliveryStaff" class="form-control mb-3 search-input" onkeyup="searchTable('deliveryStaffTable', 'searchDeliveryStaff', 0)" placeholder="Search for delivery staff..">
                </div>
                <div class="table-container">
                    <table id="deliveryStaffTable" class="table-excel">
                        <thead>
                            <tr>
                                <th>User ID</th>
                                <th>User Name</th>
                                <th>
                                    Full Name
                                    <button class="sort-button" data-table="deliveryStaffTable" data-column="2" data-direction="asc" onclick="sortTable('deliveryStaffTable', 2, 'asc')">▲</button>
                                    <button class="sort-button" data-table="deliveryStaffTable" data-column="2" data-direction="desc" onclick="sortTable('deliveryStaffTable', 2, 'desc')">▼</button>
                                </th>
                                <th>Email</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in ViewBag.DeliveryStaff)
                            {
                                <tr id="user-row-@user.userID">
                                    <td>@user.userID</td>
                                    <td>@user.userName</td>
                                    <td>@user.fullName</td>
                                    <td>@user.email</td>
                                    <td>
                                        @if ((int)Session["RoleID"] == 2)
                                        {
                                            <button class="btn btn-status @(user.status ? "btn-success" : "btn-danger")" onclick="toggleStatus('@user.userID', @user.status)">
                                                @(user.status ? "Enable" : "Disable")
                                            </button>
                                        }
                                        else
                                        {
                                            @user.status
                                        }
                                    </td>
                                </tr>
                            }

                        </tbody>
                    </table>
                </div>
                <div class="pagination">
                    <ul class="pagination">
                        @if (ViewBag.TotalDeliveryStaff != null && ViewBag.DeliveryStaffPageSize != null)
                        {
                            int totalDeliveryStaffPages = (int)Math.Ceiling((double)ViewBag.TotalDeliveryStaff / ViewBag.DeliveryStaffPageSize);
                            for (int i = 1; i <= totalDeliveryStaffPages; i++)
                            {
                                <li class="page-item @(ViewBag.CurrentDeliveryStaffPage == i ? "active" : "")">
                                    <a class="btn-link" href="javascript:void(0);" onclick="loadDeliveryStaffPage(@i, @ViewBag.DeliveryStaffPageSize)">@i</a>
                                </li>
                            }
                        }
                    </ul>
                </div>
            </div>


            @if ((int)Session["RoleID"] == 2)
            {
                <div id="users" class="section" style="display:none;">
                    <h3>Users</h3>
                    <div class="search-container">
                        <i class="fa fa-search search-icon" data-input="searchUsers" data-table="usersTable" data-column="0" onclick="toggleSearch(this)"></i>
                        <input type="text" id="searchUsers" class="form-control mb-3 search-input" onkeyup="searchTable('usersTable', 'searchUsers', 0)" placeholder="Search for users..">
                    </div>
                    <div class="table-container">
                        <table id="usersTable" class="table-excel">
                            <thead>
                                <tr>
                                    <th>User ID</th>
                                    <th>User Name</th>
                                    <th>
                                        Full Name
                                        <button class="sort-button" data-table="usersTable" data-column="2" data-direction="asc" onclick="sortTable('usersTable', 2, 'asc')">▲</button>
                                        <button class="sort-button" data-table="usersTable" data-column="2" data-direction="desc" onclick="sortTable('usersTable', 2, 'desc')">▼</button>
                                    </th>
                                    <th>Email</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var user in ViewBag.Users)
                                {
                                    <tr id="user-row-@user.userID">
                                        <td>@user.userID</td>
                                        <td>@user.userName</td>
                                        <td>@user.fullName</td>
                                        <td>@user.email</td>
                                        <td>
                                            <button class="btn btn-status @(user.status ? "btn-success" : "btn-danger")" onclick="toggleStatus('@user.userID', @user.status)">
                                                @(user.status ? "Enable" : "Disable")
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="pagination">
                        <ul class="pagination">
                            @if (ViewBag.TotalUsers != null && ViewBag.UserPageSize != null)
                            {
                                int totalUserPages = (int)Math.Ceiling((double)ViewBag.TotalUsers / ViewBag.UserPageSize);
                                for (int i = 1; i <= totalUserPages; i++)
                                {
                                    <li class="page-item @(ViewBag.CurrentUserPage == i ? "active" : "")">
                                        <a class="btn-link" href="javascript:void(0);" onclick="loadUsersPage(@i, @ViewBag.UserPageSize)">@i</a>
                                    </li>
                                }
                            }
                        </ul>
                    </div>
                </div>
            }

            <div id="notifications" class="section">
                <h3>Notifications</h3>
                <div class="table-container">
                    <table id="notificationsTable" class="table-excel">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>
                                    Date
                                    <button class="sort-button" data-table="notificationsTable" data-column="1" data-direction="asc" onclick="sortTable('notificationsTable', 1, 'asc')">▲</button>
                                    <button class="sort-button" data-table="notificationsTable" data-column="1" data-direction="desc" onclick="sortTable('notificationsTable', 1, 'desc')">▼</button>
                                </th>
                                <th>Detail</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (ViewBag.Notifications != null && ViewBag.Notifications.Count > 0)
                            {
                                foreach (var notification in ViewBag.Notifications)
                                {
                                    <tr>
                                        <td>@notification.notificationID</td>
                                        <td>@notification.date</td>
                                        <td>@notification.detail</td>
                                        <td>
                                            @if (notification.detail.Contains("rebuy request for Diamond") && notification.status)
                                            {
                                                <div class="action-buttons">
                                                    <form action="@Url.Action("HandleRebuyRequest", "Manager")" method="post" style="display:inline;">
                                                        @Html.AntiForgeryToken()
                                                        <input type="hidden" name="notificationID" value="@notification.notificationID" />
                                                        <input type="hidden" name="isAccepted" value="true" />
                                                        <button type="submit" class="btn btn-success">Accept</button>
                                                    </form>
                                                    <form action="@Url.Action("HandleRebuyRequest", "Manager")" method="post" style="display:inline;">
                                                        @Html.AntiForgeryToken()
                                                        <input type="hidden" name="notificationID" value="@notification.notificationID" />
                                                        <input type="hidden" name="isAccepted" value="false" />
                                                        <button type="submit" class="btn btn-danger">Reject</button>
                                                    </form>
                                                </div>
                                            }
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="4">No notifications available.</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="pagination">
                    <ul class="pagination">
                        @if (ViewBag.TotalNotifications != null && ViewBag.NotificationPageSize != null)
                        {
                            int totalNotificationPages = (int)Math.Ceiling((double)ViewBag.TotalNotifications / ViewBag.NotificationPageSize);
                            for (int i = 1; i <= totalNotificationPages; i++)
                            {
                                <li class="page-item @(ViewBag.CurrentNotificationPage == i ? "active" : "")">
                                    <a class="btn-link" href="javascript:void(0);" onclick="loadNotificationsPage(@i, @ViewBag.NotificationPageSize)">@i</a>
                                </li>
                            }
                        }
                    </ul>
                </div>
            </div>

            <div id="warranty" class="section">
                <h3>Warranty</h3>
                <div class="search-container">
                    <i class="fa fa-search search-icon" data-input="searchWarranty" data-table="warrantyTable" data-column="0" onclick="toggleSearch(this)"></i>
                    <input type="text" id="searchWarranty" class="form-control mb-3 search-input" onkeyup="searchTable('warrantyTable', 'searchWarranty', 0)" placeholder="Search for warranty..">
                </div>
                <div class="table-container">
                    <table id="warrantyTable" class="table-excel">
                        <thead>
                            <tr>
                                <th>Warranty ID</th>
                                <th>Order ID</th>
                                <th>Item ID</th>
                                <th>
                                    Start Date
                                    <button class="sort-button" data-table="warrantyTable" data-column="3" data-direction="asc" onclick="sortTable('warrantyTable', 3, 'asc')">▲</button>
                                    <button class="sort-button" data-table="warrantyTable" data-column="3" data-direction="desc" onclick="sortTable('warrantyTable', 3, 'desc')">▼</button>
                                </th>
                                <th>
                                    End Date
                                    <button class="sort-button" data-table="warrantyTable" data-column="4" data-direction="asc" onclick="sortTable('warrantyTable', 4, 'asc')">▲</button>
                                    <button class="sort-button" data-table="warrantyTable" data-column="4" data-direction="desc" onclick="sortTable('warrantyTable', 4, 'desc')">▼</button>
                                </th>
                                <th>Details</th>
                                <th>Code</th>
                                <th>Status</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var warranty in ViewBag.Warranties)
                            {
                                <tr id="warranty-row-@warranty.warrantyID">
                                    <td>@warranty.warrantyID</td>
                                    <td>@warranty.orderID</td>
                                    <td>@warranty.ItemID</td>
                                    <td>@warranty.warrantyStartDate.ToString("yyyy-MM-dd")</td>
                                    <td>@warranty.warrantyEndDate.ToString("yyyy-MM-dd")</td>
                                    <td>@warranty.warrantyDetails</td>
                                    <td>@warranty.warrantyCode</td>
                                    <td>
                                        @if ((int)Session["RoleID"] == 2 || (int)Session["RoleID"] == 3)
                                        {
                                            <button class="btn btn-status @(warranty.status == "Active" ? "btn-success" : "btn-danger")" onclick="toggleWarrantyStatus('@warranty.warrantyID', @warranty.status == " Active")">
                                                @(warranty.status == "Active" ? "Active" : "Expired")
                                            </button>
                                        }
                                        else
                                        {
                                            @warranty.status
                                        }
                                    </td>
                                    <td>
                                        <form action="@Url.Action("ProcessWarranty", "Warranty")" method="post" style="display:inline;">
                                            <input type="hidden" name="warrantyID" value="@warranty.warrantyID" />
                                            <button type="submit" class="btn btn-success btn-sm">Process</button>
                                        </form>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="pagination">
                    <ul class="pagination">
                        @if (ViewBag.TotalWarranties != null && ViewBag.WarrantyPageSize != null)
                        {
                            int totalWarrantyPages = (int)Math.Ceiling((double)ViewBag.TotalWarranties / ViewBag.WarrantyPageSize);
                            for (int i = 1; i <= totalWarrantyPages; i++)
                            {
                                <li class="page-item @(ViewBag.CurrentWarrantyPage == i ? "active" : "")">
                                    <a class="btn-link" href="javascript:void(0);" onclick="loadWarrantyPage(@i, @ViewBag.WarrantyPageSize)">@i</a>
                                </li>
                            }
                        }
                    </ul>
                </div>
            </div>

            <div id="createAccount" class="section" style="display:none;">
                <div class="signup-container">
                    <h3 class="center-text">Create System Account</h3>
                    @using (Html.BeginForm("CreateStaffAccount", "Manager", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-group">
                            <label for="txtUname">User Name:</label>
                            <input type="text" class="form-control" id="txtUname" name="userName" placeholder="Enter Your User Name" value="@TempData["UserName"]" required />
                        </div>
                        <div class="form-group position-relative">
                            <label for="txtPass">Password:</label>
                            <input type="password" class="form-control" id="txtPass" name="password" placeholder="Enter Your Password" required />
                            <span toggle="#txtPass" class="fa fa-fw fa-eye field-icon toggle-password"></span>
                        </div>
                        <div class="form-group position-relative">
                            <label for="txtCPass">Confirm Password:</label>
                            <input type="password" class="form-control" id="txtCPass" name="confirmPassword" placeholder="Enter Your Confirm Password" required />
                            <span toggle="#txtCPass" class="fa fa-fw fa-eye field-icon toggle-password"></span>
                        </div>
                        <div class="form-group">
                            <label for="txtName">Full Name:</label>
                            <input type="text" class="form-control" id="txtName" name="fullName" placeholder="Enter Your Name" value="@TempData["FullName"]" required />
                        </div>
                        <div class="form-group">
                            <label for="txtEmail">Email:</label>
                            <input type="email" class="form-control" id="txtEmail" name="email" placeholder="Enter Your Email" value="@TempData["Email"]" required />
                        </div>
                        <div class="form-group">
                            <label for="roleId">Role:</label>
                            <select class="form-control" id="roleId" name="roleId" required>
                                <option value="3" @(TempData["RoleID"] != null && (int)TempData["RoleID"] == 3 ? "selected" : "")>Manager</option>
                                <option value="5" @(TempData["RoleID"] != null && (int)TempData["RoleID"] == 5 ? "selected" : "")>Sale Staff</option>
                                <option value="4" @(TempData["RoleID"] != null && (int)TempData["RoleID"] == 4 ? "selected" : "")>Delivery Staff</option>
                            </select>
                        </div>
                        <button type="submit" class="btn btn-success btn-block">Sign Up</button>
                    }
                </div>
            </div>

            <div class="spinner-border text-primary" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        </main>

        <div class="right-section">
            <div class="nav">
                <button id="menu-btn">
                    <span class="material-icons-sharp">menu</span>
                </button>
                <div class="dark-mode">
                    <span class="material-icons-sharp active">light_mode</span>
                    <span class="material-icons-sharp">dark_mode</span>
                </div>
                <div class="profile">
                    <div class="info">
                        <p>Hey, <b>@ViewBag.userName</b></p>
                        <small class="text-muted">@Session["RoleName"]</small>
                    </div>
                </div>
            </div>
            <div class="user-profile">
                <div class="logo">
                    <img src="~/Image/HomePage/Logo/Hand with crystal_ Mystical, esoteric, magic or healing crystal_.jpg">
                    <h2>The Diamond Shop</h2>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/js/all.min.js"></script>
    <script>
        const sideMenu = document.querySelector('aside');
        const menuBtn = document.getElementById('menu-btn');
        const closeBtn = document.getElementById('close-btn');
        const darkMode = document.querySelector('.dark-mode');

        menuBtn.addEventListener('click', () => {
            sideMenu.style.display = 'block';
        });

        closeBtn.addEventListener('click', () => {
            sideMenu.style.display = 'none';
        });

        darkMode.addEventListener('click', () => {
            document.body.classList.toggle('dark-mode-variables');
            darkMode.querySelector('span:nth-child(1)').classList.toggle('active');
            darkMode.querySelector('span:nth-child(2)').classList.toggle('active');
        });

        document.addEventListener("DOMContentLoaded", function () {
            const paginationLinks = document.querySelectorAll('.pagination .btn-link');
            paginationLinks.forEach(link => {
                link.addEventListener('click', function () {
                    // Loại bỏ lớp active từ tất cả các liên kết
                    paginationLinks.forEach(link => link.parentElement.classList.remove('active'));
                    // Thêm lớp active vào liên kết được nhấn
                    this.parentElement.classList.add('active');
                });
            });
        });

        function showSection(sectionId) {
            var sections = document.getElementsByClassName('section');
            for (var i = 0; i < sections.length; i++) {
                sections[i].style.display = 'none';
            }
            document.getElementById(sectionId).style.display = 'block';
        }

        function searchTable(tableId, inputId) {
            var input = document.getElementById(inputId);
            var filter = input.value.trim().toUpperCase();
            var table = document.getElementById(tableId);
            var tr = table.getElementsByTagName("tr");

            for (var i = 1; i < tr.length; i++) {
                var tds = tr[i].getElementsByTagName("td");
                var match = false;

                for (var j = 0; j < tds.length; j++) {
                    var td = tds[j];
                    if (td) {
                        var txtValue = td.textContent || td.innerText;
                        if (txtValue.toUpperCase().indexOf(filter) > -1) {
                            match = true;
                            break;
                        }
                    }
                }

                if (match) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }

        function toggleSearch(icon) {
            var inputId = $(icon).data("input");
            var input = $("#" + inputId);
            input.toggle();
        }

        $(document).ready(function () {
            if ('@TempData["SuccessMessage"]'.length > 0) {
                $('#updateSuccessMessage').show().delay(3000).fadeOut();
            }

            if ('@TempData["ErrorMessage"]'.length > 0) {
                $('#updateErrorMessage').show().delay(3000).fadeOut();
            }

            var roleId = @Html.Raw(Session["RoleID"]);

            var ctx = document.getElementById('revenueChart').getContext('2d');
            var revenueChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.RevenueLabels)),
                    datasets: [{
                        label: 'Revenue',
                        data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.RevenueData)),
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                callback: function (value) {
                                    return '$' + value.toLocaleString();
                                }
                            }
                        }
                    },
                    plugins: {
                        tooltip: {
                            callbacks: {
                                label: function (context) {
                                    return '$' + context.raw.toLocaleString();
                                }
                            }
                        }
                    }
                }
            });

            if (roleId == 2) { // Admin
                var ctx2 = document.getElementById('registrationChart').getContext('2d');
                var registrationChart = new Chart(ctx2, {
                    type: 'bar',
                    data: {
                        labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.RegistrationLabels)),
                        datasets: [{
                            label: 'Registrations',
                            data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.RegistrationData)),
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    callback: function (value) {
                                        return value;
                                    }
                                }
                            }
                        },
                        plugins: {
                            tooltip: {
                                callbacks: {
                                    label: function (context) {
                                        return context.raw + ' registrations';
                                    }
                                }
                            }
                        }
                    }
                });
            }
        });

        function updateOrders() {
            $('#updateSuccessMessage').hide();
            $('#updateErrorMessage').hide();
            var orderUpdates = [];
            $('#ordersTable tbody tr').each(function () {
                var orderId = $(this).find('input[name^="orderUpdates"][name$=".OrderID"]').val();
                var saleStaffId = $(this).find('select[name^="orderUpdates"][name$=".SaleStaffID"]').val();
                var deliveryStaffId = $(this).find('select[name^="orderUpdates"][name$=".DeliveryStaffID"]').val();
                var status = $(this).find('select[name^="orderUpdates"][name$=".Status"]').val();
                if (saleStaffId !== $(this).find('select[name^="orderUpdates"][name$=".SaleStaffID"]').data('original') ||
                    deliveryStaffId !== $(this).find('select[name^="orderUpdates"][name$=".DeliveryStaffID"]').data('original') ||
                    status !== $(this).find('select[name^="orderUpdates"][name$=".Status"]').data('original')) {
                    orderUpdates.push({
                        OrderID: orderId,
                        SaleStaffID: saleStaffId,
                        DeliveryStaffID: deliveryStaffId,
                        Status: status
                    });
                }
            });
            if (orderUpdates.length === 0) {
                $('#updateErrorMessage').text("No changes detected.").show().delay(2000).fadeOut();
                return;
            }
            $.ajax({
                type: 'POST',
                url: '@Url.Action("UpdateOrders", "Manager")',
                contentType: 'application/json',
                data: JSON.stringify(orderUpdates),
                success: function (response) {
                    if (response.success) {
                        $('#updateSuccessMessage').text(response.message).show().delay(2000).fadeOut(function () {
                            window.location.reload();
                        });
                    } else {
                        $('#updateErrorMessage').text(response.message).show().delay(2000).fadeOut();
                    }
                },
                error: function (xhr, status, error) {
                    console.error(error);
                    $('#updateErrorMessage').text("An error occurred while updating orders.").show().delay(2000).fadeOut();
                }
            });
        }

        function toggleStatus(userId, currentStatus) {
            var newStatus = !currentStatus;
            $.ajax({
                type: 'POST',
                url: '@Url.Action("ToggleUserStatus", "Manager")',
                data: {
                    userId: userId,
                    status: newStatus
                },
                success: function (response) {
                    if (response.success) {
                        $('#user-row-' + userId + ' button').toggleClass('btn-success btn-danger').text(newStatus ? 'Enable' : 'Disable');
                        $('#user-row-' + userId + ' button').attr('onclick', 'toggleStatus("' + userId + '", ' + newStatus + ')');
                    } else {
                        alert(response.message);
                    }
                },
                error: function (xhr, status, error) {
                    console.error(error);
                    alert("An error occurred while updating the status.");
                }
            });
        }

        function toggleDiamondStatus(diamondId, currentStatus) {
            var newStatus = !currentStatus;
            $.ajax({
                type: 'POST',
                url: '@Url.Action("ToggleDiamondStatus", "Manager")',
                data: {
                    diamondId: diamondId,
                    status: newStatus
                },
                success: function (response) {
                    if (response.success) {
                        var button = $('#diamond-row-' + diamondId + ' button');
                        button.toggleClass('btn-success btn-danger').text(newStatus ? 'Enable' : 'Disable');
                        button.attr('onclick', 'toggleDiamondStatus("' + diamondId + '", ' + newStatus + ')');
                    } else {
                        alert(response.message);
                    }
                },
                error: function (xhr, status, error) {
                    console.error(error);
                    alert("An error occurred while updating the status.");
                }
            });
        }

        function toggleAccentStoneStatus(accentStoneId, currentStatus) {
            var newStatus = !currentStatus;
            $.ajax({
                type: 'POST',
                url: '@Url.Action("ToggleAccentStoneStatus", "Manager")',
                data: {
                    accentStoneId: accentStoneId,
                    status: newStatus
                },
                success: function (response) {
                    if (response.success) {
                        $('#accentStone-row-' + accentStoneId + ' button').toggleClass('btn-success btn-danger').text(newStatus ? 'Enable' : 'Disable');
                        $('#accentStone-row-' + accentStoneId + ' button').attr('onclick', 'toggleAccentStoneStatus("' + accentStoneId + '", ' + newStatus + ')');
                    } else {
                        alert(response.message);
                    }
                },
                error: function (xhr, status, error) {
                    console.error(error);
                    alert("An error occurred while updating the status.");
                }
            });
        }

        function toggleSettingStatus(settingId, currentStatus) {
            var newStatus = !currentStatus;
            $.ajax({
                type: 'POST',
                url: '@Url.Action("ToggleSettingStatus", "Manager")',
                data: {
                    settingId: settingId,
                    status: newStatus
                },
                success: function (response) {
                    if (response.success) {
                        $('#setting-row-' + settingId + ' button').toggleClass('btn-success btn-danger').text(newStatus ? 'Enable' : 'Disable');
                        $('#setting-row-' + settingId + ' button').attr('onclick', 'toggleSettingStatus("' + settingId + '", ' + newStatus + ')');
                    } else {
                        alert(response.message);
                    }
                },
                error: function (xhr, status, error) {
                    console.error(error);
                    alert("An error occurred while updating the status.");
                }
            });
        }

       function toggleVoucherStatus(voucherId, currentStatus) {
            var newStatus = !currentStatus;
            $.ajax({
                type: 'POST',
                url: '@Url.Action("ToggleVoucherStatus", "Manager")',
                data: {
                    voucherId: voucherId,
                    status: newStatus
                },
                success: function (response) {
                    if (response.success) {
                        var button = $('#voucher-row-' + voucherId + ' button');
                        button.toggleClass('btn-success btn-danger').text(newStatus ? 'Enable' : 'Disable');
                        button.attr('onclick', 'toggleVoucherStatus("' + voucherId + '", ' + newStatus + ')');
                    } else {
                        alert(response.message);
                    }
                },
                error: function (xhr, status, error) {
                    console.error(error);
                    alert("An error occurred while updating the status.");
                }
            });
        }

        function toggleWarrantyStatus(warrantyID, currentStatus) {
            var newStatus = !currentStatus;
            $.ajax({
                type: 'POST',
                url: '@Url.Action("ToggleWarrantyStatus", "Manager")',
                data: {
                    warrantyID: warrantyID,
                    status: newStatus
                },
                success: function (response) {
                    if (response.success) {
                        $('#warranty-row-' + warrantyID + ' button').toggleClass('btn-success btn-danger').text(newStatus ? 'Active' : 'Expired');
                        $('#warranty-row-' + warrantyID + ' button').attr('onclick', 'toggleWarrantyStatus("' + warrantyID + '", ' + newStatus + ')');
                    } else {
                        alert(response.message);
                    }
                },
                error: function (xhr, status, error) {
                    console.error(error);
                    alert("An error occurred while updating the status.");
                }
            });
        }

        function loadDiamondsPage(page, pageSize) {
            $.ajax({
                url: '@Url.Action("Index", "Manager")',
                type: 'GET',
                data: { page: page, pageSize: pageSize },
                success: function (data) {
                    $('#diamondsContent').html($(data).find('#diamondsContent').html());
                    updatePagination(page, pageSize);
                },
                error: function () {
                    alert('An error occurred while loading the page.');
                }
            });
        }

        function loadOrdersPage(page, orderPageSize) {
            $.ajax({
                url: '@Url.Action("Index", "Manager")',
                type: 'GET',
                data: { page: page, orderPageSize: orderPageSize },
                success: function (data) {
                    $('#orders').html($(data).find('#orders').html());
                },
                error: function () {
                    alert('An error occurred while loading the orders page.');
                }
            });
        }

        function loadVouchersPage(page, voucherPageSize) {
            $.ajax({
                url: '@Url.Action("Index", "Manager")',
                type: 'GET',
                data: { page: page, voucherPageSize: voucherPageSize },
                success: function (data) {
                    $('#viewVoucher').html($(data).find('#viewVoucher').html());
                },
                error: function () {
                    alert('An error occurred while loading the vouchers page.');
                }
            });
        }

        function loadAccentStonesPage(page, accentStonePageSize) {
            $.ajax({
                url: '@Url.Action("Index", "Manager")',
                type: 'GET',
                data: { accentStonePage: page, accentStonePageSize: accentStonePageSize },
                success: function (data) {
                    $('#accentStones').html($(data).find('#accentStones').html());
                },
                error: function () {
                    alert('An error occurred while loading the accent stones page.');
                }
            });
        }


        function loadSettingsPage(page, settingPageSize) {
        $.ajax({
            url: '@Url.Action("Index", "Manager")',
            type: 'GET',
            data: { page: page, settingPageSize: settingPageSize },
            success: function (data) {
                $('#settings').html($(data).find('#settings').html());
            },
            error: function () {
                alert('An error occurred while loading the settings page.');
            }
        });
    }

        function loadUsersPage(page, userPageSize) {
        $.ajax({
            url: '@Url.Action("Index", "Manager")',
            type: 'GET',
            data: { page: page, userPageSize: userPageSize },
            success: function (data) {
                $('#users').html($(data).find('#users').html());
            },
            error: function () {
                alert('An error occurred while loading the users page.');
            }
        });
    }

        function loadDeliveryStaffPage(page, deliveryStaffPageSize) {
        $.ajax({
            url: '@Url.Action("Index", "Manager")',
            type: 'GET',
            data: { page: page, deliveryStaffPageSize: deliveryStaffPageSize},
            success: function (data) {
                $('#deliveryStaff').html($(data).find('#deliveryStaff').html());
            },
            error: function () {
                alert('An error occurred while loading the delivery staff page.');
            }
        });
    }

        function loadSaleStaffPage(page, saleStaffPageSize) {
        $.ajax({
            url: '@Url.Action("Index", "Manager")',
            type: 'GET',
            data: { page: page, saleStaffPageSize: saleStaffPageSize},
            success: function (data) {
                $('#saleStaff').html($(data).find('#saleStaff').html());
            },
            error: function () {
                alert('An error occurred while loading the sale staff page.');
            }
        });
        }


        function loadNotificationsPage(page, pageSize) {
            $.ajax({
                url: '@Url.Action("Index", "Manager")',
                type: 'GET',
                data: { page: page, notificationPageSize: pageSize },
                success: function (data) {
                    $('#notifications').html($(data).find('#notifications').html());
                    updatePagination(page, pageSize);
                },
                error: function () {
                    alert('An error occurred while loading the notifications page.');
                }
            });
        }

        function loadWarrantyPage(page, warrantyPageSize) {
            $.ajax({
                url: '@Url.Action("Index", "Manager")',
                type: 'GET',
                data: { warrantyPage: page, warrantyPageSize: warrantyPageSize },
                success: function (data) {
                    $('#warranty').html($(data).find('#warranty').html());
                    updateWarrantyPagination(page, warrantyPageSize);
                },
                error: function () {
                    alert('An error occurred while loading the warranty page.');
                }
            });
        }

        function updateWarrantyPagination(currentPage, pageSize) {
            var totalPages = Math.ceil(@ViewBag.TotalWarranties / pageSize);
            var paginationHtml = '';
            for (var i = 1; i <= totalPages; i++) {
                paginationHtml += '<li class="page-item ' + (currentPage == i ? 'active' : '') + '"><a class="btn-link" href="javascript:void(0);" onclick="loadWarrantyPage(' + i + ', ' + pageSize + ')">' + i + '</a></li>';
            }
            $('#warranty .pagination ul').html(paginationHtml);
            document.querySelectorAll('.pagination .btn-link').forEach(link => {
                link.addEventListener('click', function () {
                    document.querySelectorAll('.pagination .page-item').forEach(link => link.classList.remove('active'));
                    this.parentElement.classList.add('active');
                });
            });
        }

        function updatePagination(currentPage, pageSize) {
            var totalPages = Math.ceil(@ViewBag.TotalDiamonds / pageSize);
            var paginationHtml = '';
            for (var i = 1; i <= totalPages; i++) {
                paginationHtml += '<li class="page-item ' + (currentPage == i ? 'active' : '') + '"><a class="btn-link" href="javascript:void(0);" onclick="loadDiamondsPage(' + i + ', ' + pageSize + ')">' + i + '</a></li>';
            }
            $('.pagination ul').html(paginationHtml);
            // Thêm sự kiện click cho các liên kết phân trang
            document.querySelectorAll('.pagination .btn-link').forEach(link => {
                link.addEventListener('click', function () {
                    document.querySelectorAll('.pagination .page-item').forEach(link => link.classList.remove('active'));
                    this.parentElement.classList.add('active');
                });
            });
        }

        function clearForm() {
            $('input[type="text"], input[type="number"], input[type="file"], input[type="date"]').val('');
            $('.custom-file-label').removeClass('selected').html('Choose file');
        }

        function submitAddDiamondForm() {
            var formData = new FormData($('#addDiamondForm')[0]);
            $.ajax({
                type: 'POST',
                url: '@Url.Action("AddDiamond", "Diamonds")',
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    if (response.success) {
                        $('#addDiamondSuccessMessage').text(response.message).show().delay(3000).fadeOut();
                        clearForm();
                    } else {
                        $('#addDiamondErrorMessage').text(response.message).show().delay(3000).fadeOut();
                    }
                },
                error: function (xhr, status, error) {
                    console.error(error);
                    $('#addDiamondErrorMessage').text("An error occurred while adding the diamond.").show().delay(3000).fadeOut();
                }
            });
        }

        $(document).on('click', '.toggle-password', function () {
            $(this).toggleClass('fa-eye fa-eye-slash');
            var input = $($(this).attr('toggle'));
            if (input.attr('type') == 'password') {
                input.attr('type', 'text');
            } else {
                input.attr('type', 'password');
            }
        });

        // Hiển thị tên file khi chọn file
        $(document).on('change', '.custom-file-input', function () {
            var fileName = $(this).val().split('\\').pop();
            $(this).siblings('.custom-file-label').addClass('selected').html(fileName);
        });

        setTimeout(function () {
            $('.alert').fadeOut('slow');
        }, 3000);

        function sortTable(tableId, columnIndex, direction, isCurrency = false, isStatus = false) {
            var table, rows, switching, i, x, y, shouldSwitch, switchcount = 0;
            table = document.getElementById(tableId);
            var tbody = table.querySelector('tbody');

            // Status order mapping
            var statusOrder = {
                "order placed": 1,
                "preparing goods": 2,
                "shipped to carrier": 3,
                "in delivery": 4,
                "delivered": 5,
                "paid": 6
            };

            // Check if the table is already sorted in the same direction
            var isSorted = tbody.getAttribute('data-sorted-column') == columnIndex && tbody.getAttribute('data-sorted-direction') == direction;

            if (isSorted) {
                // Restore the original state of the table
                tbody.innerHTML = tbody.getAttribute('data-original');
                // Clear the sorted column and direction attributes
                tbody.removeAttribute('data-sorted-column');
                tbody.removeAttribute('data-sorted-direction');
                // Remove active class from all sort buttons
                var sortButtons = table.querySelectorAll('.sort-button');
                sortButtons.forEach(button => button.classList.remove('active'));
                return;
            }

            switching = true;

            // Remove active class from all sort buttons
            var sortButtons = table.querySelectorAll('.sort-button');
            sortButtons.forEach(button => button.classList.remove('active'));

            // Set active class to the clicked button
            var activeButton = table.querySelector('.sort-button[data-table="' + tableId + '"][data-column="' + columnIndex + '"][data-direction="' + direction + '"]');
            activeButton.classList.add('active');

            // Set direction
            var dir = direction;

            while (switching) {
                switching = false;
                rows = table.rows;
                for (i = 1; i < (rows.length - 1); i++) {
                    shouldSwitch = false;
                    x = rows[i].getElementsByTagName("TD")[columnIndex];
                    y = rows[i + 1].getElementsByTagName("TD")[columnIndex];

                    var xContent = x.innerHTML.toLowerCase().trim();
                    var yContent = y.innerHTML.toLowerCase().trim();

                    // Check if the column contains currency
                    if (isCurrency) {
                        xContent = parseFloat(xContent.replace(/[\$,]/g, '')) || 0;
                        yContent = parseFloat(yContent.replace(/[\$,]/g, '')) || 0;
                    }

                    // Check if the column is a status
                    if (isStatus) {
                        xContent = statusOrder[xContent] || 0;
                        yContent = statusOrder[yContent] || 0;
                    }

                    if (dir == "asc") {
                        if (xContent > yContent) {
                            shouldSwitch = true;
                            break;
                        }
                    } else if (dir == "desc") {
                        if (xContent < yContent) {
                            shouldSwitch = true;
                            break;
                        }
                    }
                }
                if (shouldSwitch) {
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                    switchcount++;
                } else {
                    if (switchcount == 0 && dir == "asc") {
                        dir = "desc";
                        switching = true;
                    }
                }
            }
        }

    </script>
</body>
</html>
