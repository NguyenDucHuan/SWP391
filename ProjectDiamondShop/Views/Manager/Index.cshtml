@{
    ViewBag.Title = "Manager Dashboard";
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>@ViewBag.Title</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <style>
        .section {
            margin-top: 20px;
            display: none;
        }

        .table-container {
            max-height: 400px;
            overflow-y: auto;
        }

        .table thead th {
            background-color: #f8f9fa;
            position: sticky;
            top: 0;
            z-index: 1;
        }

        .btn-group {
            margin-bottom: 20px;
            display: flex;
            flex-wrap: wrap;
        }

        .wide-column {
            min-width: 150px;
        }

        .spinner-border {
            display: none;
            width: 3rem;
            height: 3rem;
            border-width: .3rem;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1050;
        }

        #updateSuccessMessage {
            display: none;
            color: green;
            font-weight: bold;
            margin-top: 20px;
        }

        #updateErrorMessage {
            display: none;
            color: red;
            font-weight: bold;
            margin-top: 20px;
        }

        .signup-container {
            padding: 20px;
            margin-top: 10px;
            max-width: 400px;
            width: 100%;
            margin-left: auto;
            margin-right: auto;
            display: flex;
            flex-direction: column;
            justify-content: center;
            border: 2px solid #ccc;
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.5);
            border-radius: 10px;
            background-color: #d0e8f2;
            color: #333;
        }

        .form-group {
            margin-bottom: 15px;
            text-align: left;
        }

        .form-control {
            width: 100%;
        }

        .center-text {
            text-align: center;
            color: #333;
        }

        .field-icon {
            float: right;
            margin-right: 10px;
            margin-top: -25px;
            position: relative;
            z-index: 2;
            cursor: pointer;
        }

        .btn-success {
            background-color: #28a745;
            border-color: #28a745;
            width: 100%;
            padding: 10px;
            font-size: 16px;
        }
    </style>
</head>

<body>
    <div class="container text-center">
        @if ((int)Session["RoleID"] == 3)
        {
            <h2 class="mt-4">Manager Dashboard</h2>
        }
        @if ((int)Session["RoleID"] == 2)
        {
            <h2 class="mt-4">Admin Dashboard</h2>
        }


        <div id="updateSuccessMessage" class="alert alert-success" style="display:none;">@TempData["SuccessMessage"]</div>
        <div id="updateErrorMessage" class="alert alert-danger" style="display:none;">@TempData["ErrorMessage"]</div>


        <div class="btn-group" role="group">
            <button type="button" class="btn btn-primary col-12 col-sm-6 col-md-4 col-lg-2 m-1" onclick="showSection('orders')">Orders</button>
            <button type="button" class="btn btn-primary col-12 col-sm-6 col-md-4 col-lg-2 m-1" onclick="showSection('diamonds')">Diamonds</button>
            <button type="button" class="btn btn-primary col-12 col-sm-6 col-md-4 col-lg-2 m-1" onclick="showSection('saleStaff')">Sale Staff</button>
            <button type="button" class="btn btn-primary col-12 col-sm-6 col-md-4 col-lg-2 m-1" onclick="showSection('deliveryStaff')">Delivery Staff</button>
            @if ((int)Session["RoleID"] == 2)
            {
                <button type="button" class="btn btn-primary col-12 col-sm-6 col-md-4 col-lg-2 m-1" onclick="showSection('users')">Users</button>
                <button type="button" class="btn btn-primary col-12 col-sm-6 col-md-4 col-lg-2 m-1" onclick="showSection('createAccount')">Create Account</button>
            }
            <a href="@Url.Action("CreateVoucher", "Manager")" class="btn btn-primary col-12 col-sm-6 col-md-4 col-lg-2 m-1">Create Voucher</a>
            <a href="@Url.Action("Logout", "Login")" class="btn btn-danger col-12 col-sm-6 col-md-4 col-lg-2 m-1">Logout</a>
        </div>

        <div id="chart" class="section" style="display:block;">
            @if ((int)Session["RoleID"] == 3)
            {
                <div>
                    <h3>Revenue Chart</h3>
                    <canvas id="revenueChart" class="w-100"></canvas>
                </div>
            }
            <div class="row">
                @if ((int)Session["RoleID"] == 2)
                {
                    <div class="col-12 col-md-6">
                        <h3>Revenue Chart</h3>
                        <canvas id="revenueChart" class="w-100"></canvas>
                    </div>
                    <div class="col-12 col-md-6">
                        <h3>Registration Chart</h3>
                        <canvas id="registrationChart" class="w-100"></canvas>
                    </div>
                }
            </div>
        </div>

        <div id="orders" class="section">
            <h3>Orders</h3>
            <input type="text" id="searchOrders" class="form-control mb-3" onkeyup="searchTable('ordersTable', 'searchOrders', 0)" placeholder="Search for orders by OrderID..">
            <div class="table-container">
                <table id="ordersTable" class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>Order ID</th>
                            <th>Customer ID</th>
                            <th class="wide-column">Sale Staff</th>
                            <th class="wide-column">Delivery Staff</th>
                            <th>Total Money</th>
                            <th class="wide-column">Status</th>
                            <th>Address</th>
                            <th>Phone</th>
                            <th>Sale Date</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < ViewBag.Orders.Count; i++)
                        {
                            var order = ViewBag.Orders[i];
                            <tr>
                                <td>@order.orderID</td>
                                <td>@order.customerID</td>
                                <td>
                                    <select class="form-control saleStaff" name="orderUpdates[@i].SaleStaffID" data-original="@order.saleStaffID">
                                        <option value="">Default</option>
                                        @foreach (var staff in ViewBag.SaleStaff)
                                        {
                                            <option value="@staff.userID" @(order.saleStaffID == staff.userID ? "selected" : "")>@staff.fullName (@staff.userID)</option>
                                        }
                                    </select>
                                    <input type="hidden" name="orderUpdates[@i].OrderID" value="@order.orderID" />
                                </td>
                                <td>
                                    <select class="form-control deliveryStaff" name="orderUpdates[@i].DeliveryStaffID" data-original="@order.deliveryStaffID">
                                        <option value="">Default</option>
                                        @foreach (var staff in ViewBag.DeliveryStaff)
                                        {
                                            <option value="@staff.userID" @(order.deliveryStaffID == staff.userID ? "selected" : "")>@staff.fullName (@staff.userID)</option>
                                        }
                                    </select>
                                </td>
                                <td>@order.totalMoney</td>
                                <td>
                                    <select class="form-control status" name="orderUpdates[@i].Status" data-original="@order.status">
                                        <option value="Order Placed" @(order.status == "Order Placed" ? "selected" : "")>Order Placed</option>
                                        <option value="Preparing Goods" @(order.status == "Preparing Goods" ? "selected" : "")>Preparing Goods</option>
                                        <option value="Shipped to Carrier" @(order.status == "Shipped to Carrier" ? "selected" : "")>Shipped to Carrier</option>
                                        <option value="In Delivery" @(order.status == "In Delivery" ? "selected" : "")>In Delivery</option>
                                        <option value="Delivered" @(order.status == "Delivered" ? "selected" : "")>Delivered</option>
                                        <option value="Paid" @(order.status == "Paid" ? "selected" : "")>Paid</option>
                                    </select>
                                </td>
                                <td>@order.address</td>
                                <td>@order.phone</td>
                                <td>@order.saleDate</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <button type="button" class="btn btn-primary mt-3" onclick="updateOrders()">Update Orders</button>
        </div>

        <div id="diamonds" class="section">
            <h3>Diamonds</h3>
            <input type="text" id="searchDiamonds" class="form-control mb-3" onkeyup="searchTable('diamondsTable', 'searchDiamonds', 0)" placeholder="Search for diamonds by DiamondID..">
            <div class="table-container">
                <table id="diamondsTable" class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Price</th>
                            <th>Description</th>
                            <th>Carat Weight</th>
                            <th>Clarity</th>
                            <th>Cut</th>
                            <th>Color</th>
                            <th>Shape</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var diamond in ViewBag.Diamonds)
                        {
                            <tr>
                                <td>@diamond.diamondID</td>
                                <td>@diamond.diamondName</td>
                                <td>@diamond.diamondPrice</td>
                                <td>@diamond.diamondDescription</td>
                                <td>@diamond.caratWeight</td>
                                <td>@diamond.clarityID</td>
                                <td>@diamond.cutID</td>
                                <td>@diamond.colorID</td>
                                <td>@diamond.shapeID</td>
                                <td>@diamond.status</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div id="saleStaff" class="section">
            <h3>Sale Staff</h3>
            <input type="text" id="searchSaleStaff" class="form-control mb-3" onkeyup="searchTable('saleStaffTable', 'searchSaleStaff', 0)" placeholder="Search for sale staff by UserID..">
            <div class="table-container">
                <table id="saleStaffTable" class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>User ID</th>
                            <th>User Name</th>
                            <th>Full Name</th>
                            <th>Email</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in ViewBag.SaleStaff)
                        {
                            <tr id="user-row-@user.userID">
                                <td>@user.userID</td>
                                <td>@user.userName</td>
                                <td>@user.fullName</td>
                                <td>@user.email</td>
                                <td>
                                    @if ((int)Session["RoleID"] == 2)
                                    {
                                        <button class="btn @(user.status ? "btn-success" : "btn-danger")" onclick="toggleStatus('@user.userID', @user.status)">
                                            @(user.status ? "Enable" : "Disable")
                                        </button>
                                    }
                                    else
                                    {
                                        @user.status
                                    }
                                </td>
                            </tr>
                        }

                    </tbody>
                </table>
            </div>
        </div>

        <div id="deliveryStaff" class="section">
            <h3>Delivery Staff</h3>
            <input type="text" id="searchDeliveryStaff" class="form-control mb-3" onkeyup="searchTable('deliveryStaffTable', 'searchDeliveryStaff', 0)" placeholder="Search for delivery staff by UserID..">
            <div class="table-container">
                <table id="deliveryStaffTable" class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>User ID</th>
                            <th>User Name</th>
                            <th>Full Name</th>
                            <th>Email</h>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in ViewBag.DeliveryStaff)
                        {
                            <tr id="user-row-@user.userID">
                                <td>@user.userID</td>
                                <td>@user.userName</td>
                                <td>@user.fullName</td>
                                <td>@user.email</td>
                                <td>
                                    @if ((int)Session["RoleID"] == 2)
                                    {
                                        <button class="btn @(user.status ? "btn-success" : "btn-danger")" onclick="toggleStatus('@user.userID', @user.status)">
                                            @(user.status ? "Enable" : "Disable")
                                        </button>
                                    }
                                    else
                                    {
                                        @user.status
                                    }
                                </td>
                            </tr>
                        }

                    </tbody>
                </table>
            </div>
        </div>

        @if ((int)Session["RoleID"] == 2)
        {
            <div id="users" class="section">
                <h3>Users</h3>
                <input type="text" id="searchUsers" class="form-control mb-3" onkeyup="searchTable('usersTable', 'searchUsers', 0)" placeholder="Search for users by UserID..">
                <div class="table-container">
                    <table id="usersTable" class="table table-striped table-bordered">
                        <thead>
                            <tr>
                                <th>User ID</th>
                                <th>User Name</th>
                                <th>Full Name</th>
                                <th>Email</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in ViewBag.Users)
                            {
                                <tr id="user-row-@user.userID">
                                    <td>@user.userID</td>
                                    <td>@user.userName</td>
                                    <td>@user.fullName</td>
                                    <td>@user.email</td>
                                    <td>
                                        @if ((int)Session["RoleID"] == 2)
                                        {
                                            <button class="btn @(user.status ? "btn-success" : "btn-danger")" onclick="toggleStatus('@user.userID', @user.status)">
                                                @(user.status ? "Enable" : "Disable")
                                            </button>
                                        }
                                        else
                                        {
                                            @user.status
                                        }
                                    </td>
                                </tr>
                            }

                        </tbody>
                    </table>
                </div>
            </div>
        }

        <div id="createAccount" class="section" style="display:none;">
            <div class="signup-container">
                <h3 class="center-text">Create System Account</h3>
                @using (Html.BeginForm("CreateStaffAccount", "Manager", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        <label for="txtUname">User Name:</label>
                        <input type="text" class="form-control" id="txtUname" name="userName" placeholder="Enter Your User Name" value="@TempData["UserName"]" required />
                    </div>
                    <div class="form-group position-relative">
                        <label for="txtPass">Password:</label>
                        <input type="password" class="form-control" id="txtPass" name="password" placeholder="Enter Your Password" required />
                        <span toggle="#txtPass" class="fa fa-fw fa-eye field-icon toggle-password"></span>
                    </div>
                    <div class="form-group position-relative">
                        <label for="txtCPass">Confirm Password:</label>
                        <input type="password" class="form-control" id="txtCPass" name="confirmPassword" placeholder="Enter Your Confirm Password" required />
                        <span toggle="#txtCPass" class="fa fa-fw fa-eye field-icon toggle-password"></span>
                    </div>
                    <div class="form-group">
                        <label for="txtName">Full Name:</label>
                        <input type="text" class="form-control" id="txtName" name="fullName" placeholder="Enter Your Name" value="@TempData["FullName"]" required />
                    </div>
                    <div class="form-group">
                        <label for="txtEmail">Email:</label>
                        <input type="email" class="form-control" id="txtEmail" name="email" placeholder="Enter Your Email" value="@TempData["Email"]" required />
                    </div>
                    <div class="form-group">
                        <label for="roleId">Role:</label>
                        <select class="form-control" id="roleId" name="roleId" required>
                            <option value="3" @(TempData["RoleID"] != null && (int)TempData["RoleID"] == 3 ? "selected" : "")>Manager</option>
                            <option value="5" @(TempData["RoleID"] != null && (int)TempData["RoleID"] == 5 ? "selected" : "")>Sale Staff</option>
                            <option value="4" @(TempData["RoleID"] != null && (int)TempData["RoleID"] == 4 ? "selected" : "")>Delivery Staff</option>
                        </select>
                    </div>
                    <button type="submit" class="btn btn-success">Sign Up</button>
                }
            </div>
        </div>

        <div class="spinner-border text-primary" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/js/all.min.js"></script>
    <script>
        function showSection(sectionId) {
            var sections = document.getElementsByClassName('section');
            for (var i = 0; i < sections.length; i++) {
                sections[i].style.display = 'none';
            }
            document.getElementById(sectionId).style.display = 'block';
        }

        function searchTable(tableId, searchId, columnIndex) {
            var input, filter, table, tr, td, i, txtValue;
            input = document.getElementById(searchId);
            filter = input.value.toUpperCase();
            table = document.getElementById(tableId);
            tr = table.getElementsByTagName("tr");

            for (i = 1; i < tr.length; i++) {
                tr[i].style.display = "none";
                td = tr[i].getElementsByTagName("td")[columnIndex];
                if (td) {
                    txtValue = td.textContent || td.innerText;
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = "";
                    }
                }
            }
        }

        $(document).ready(function () {
            if ('@TempData["SuccessMessage"]'.length > 0) {
                $('#updateSuccessMessage').show().delay(3000).fadeOut();
            }

            if ('@TempData["ErrorMessage"]'.length > 0) {
                $('#updateErrorMessage').show().delay(3000).fadeOut();
            }

            var roleId = @Html.Raw(Session["RoleID"]);

            var backgroundColors = [
                'rgba(255, 99, 132, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(255, 206, 86, 0.2)',
                'rgba(75, 192, 192, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(255, 159, 64, 0.2)',
                'rgba(199, 199, 199, 0.2)',
                'rgba(83, 102, 255, 0.2)',
                'rgba(255, 206, 186, 0.2)',
                'rgba(175, 192, 192, 0.2)',
                'rgba(53, 102, 155, 0.2)',
                'rgba(255, 99, 100, 0.2)',
                'rgba(54, 162, 123, 0.2)',
                'rgba(255, 206, 130, 0.2)',
                'rgba(75, 192, 255, 0.2)',
                'rgba(153, 102, 200, 0.2)',
                'rgba(255, 159, 110, 0.2)',
                'rgba(199, 200, 200, 0.2)',
                'rgba(83, 102, 122, 0.2)',
                'rgba(255, 206, 132, 0.2)',
                'rgba(175, 192, 110, 0.2)',
                'rgba(53, 102, 90, 0.2)',
                'rgba(255, 99, 190, 0.2)',
                'rgba(54, 162, 102, 0.2)',
                'rgba(255, 206, 90, 0.2)',
                'rgba(75, 192, 132, 0.2)',
                'rgba(153, 102, 122, 0.2)',
                'rgba(255, 159, 192, 0.2)',
                'rgba(199, 199, 130, 0.2)',
                'rgba(83, 102, 140, 0.2)',
            ];

            var borderColors = [
                'rgba(255, 99, 132, 1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(75, 192, 192, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)',
                'rgba(199, 199, 199, 1)',
                'rgba(83, 102, 255, 1)',
                'rgba(255, 206, 186, 1)',
                'rgba(175, 192, 192, 1)',
                'rgba(53, 102, 155, 1)',
                'rgba(255, 99, 100, 1)',
                'rgba(54, 162, 123, 1)',
                'rgba(255, 206, 130, 1)',
                'rgba(75, 192, 255, 1)',
                'rgba(153, 102, 200, 1)',
                'rgba(255, 159, 110, 1)',
                'rgba(199, 200, 200, 1)',
                'rgba(83, 102, 122, 1)',
                'rgba(255, 206, 132, 1)',
                'rgba(175, 192, 110, 1)',
                'rgba(53, 102, 90, 1)',
                'rgba(255, 99, 190, 1)',
                'rgba(54, 162, 102, 1)',
                'rgba(255, 206, 90, 1)',
                'rgba(75, 192, 132, 1)',
                'rgba(153, 102, 122, 1)',
                'rgba(255, 159, 192, 1)',
                'rgba(199, 199, 130, 1)',
                'rgba(83, 102, 140, 1)',
            ];

            if (roleId == 2) { // Admin
                var ctx = document.getElementById('revenueChart').getContext('2d');
                var revenueChart = new Chart(ctx, {
                    type: 'pie',  // Sử dụng biểu đồ pie cho admin
                    data: {
                        labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.RevenueLabels)),
                        datasets: [{
                            label: 'Revenue',
                            data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.RevenueData)),
                            backgroundColor: backgroundColors,
                            borderColor: borderColors,
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });

                var ctx2 = document.getElementById('registrationChart').getContext('2d');
                var registrationChart = new Chart(ctx2, {
                    type: 'pie',
                    data: {
                        labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.RegistrationLabels)),
                        datasets: [{
                            label: 'Registrations',
                            data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.RegistrationData)),
                            backgroundColor: backgroundColors,
                            borderColor: borderColors,
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            } else if (roleId == 3) { // Manager
                var ctx = document.getElementById('revenueChart').getContext('2d');
                var revenueChart = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.RevenueLabels)),
                        datasets: [{
                            label: 'Revenue',
                            data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.RevenueData)),
                            borderColor: 'rgba(75, 192, 192, 1)',
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            }
        });

        function updateOrders() {
            $('#updateSuccessMessage').hide();
            $('#updateErrorMessage').hide();

            var orderUpdates = [];

            $('#ordersTable tbody tr').each(function () {
                var orderId = $(this).find('input[name^="orderUpdates"][name$=".OrderID"]').val();
                var saleStaffId = $(this).find('select[name^="orderUpdates"][name$=".SaleStaffID"]').val();
                var deliveryStaffId = $(this).find('select[name^="orderUpdates"][name$=".DeliveryStaffID"]').val();
                var status = $(this).find('select[name^="orderUpdates"][name$=".Status"]').val();

                // Check if the value has changed
                if (saleStaffId !== $(this).find('select[name^="orderUpdates"][name$=".SaleStaffID"]').data('original') ||
                    deliveryStaffId !== $(this).find('select[name^="orderUpdates"][name$=".DeliveryStaffID"]').data('original') ||
                    status !== $(this).find('select[name^="orderUpdates"][name$=".Status"]').data('original')) {

                    orderUpdates.push({
                        OrderID: orderId,
                        SaleStaffID: saleStaffId,
                        DeliveryStaffID: deliveryStaffId,
                        Status: status
                    });
                }
            });

            if (orderUpdates.length === 0) {
                $('#updateErrorMessage').text("No changes detected.").show().delay(2000).fadeOut();
                return;
            }

            $.ajax({
                type: 'POST',
                url: '@Url.Action("UpdateOrders", "Manager")',
                contentType: 'application/json',
                data: JSON.stringify(orderUpdates),
                success: function (response) {
                    if (response.success) {
                        $('#updateSuccessMessage').text(response.message).show().delay(2000).fadeOut(function () {
                            window.location.reload();
                        });
                    } else {
                        $('#updateErrorMessage').text(response.message).show().delay(2000).fadeOut(function () {
                            window.location.reload();
                        });
                    }
                },
                error: function (xhr, status, error) {
                    $('#updateErrorMessage').text("Update failed: " + xhr.responseText).show().delay(2000).fadeOut();
                }
            });
        }

        $(document).ready(function () {
            var updateMessage = '@TempData["UpdateMessage"]';
            if (updateMessage) {
                $('#updateSuccessMessage').text(updateMessage).show().delay(3000).fadeOut();
            }
        });

        function toggleStatus(userId, currentStatus) {
            var newStatus = !currentStatus;
            $.ajax({
                type: 'POST',
                url: '@Url.Action("ToggleUserStatus", "Manager")',
                contentType: 'application/json',
                data: JSON.stringify({ userId: userId, status: newStatus }),
                success: function (response) {
                    if (response.success) {
                        var btn = $("#user-row-" + userId + " button");
                        btn.toggleClass('btn-success btn-danger')
                            .text(newStatus ? "Enable" : "Disable")
                            .attr("onclick", "toggleStatus('" + userId + "', " + newStatus + ")");
                    } else {
                        alert('Failed to update status.');
                    }
                },
                error: function (xhr, status, error) {
                    alert('Failed to update status: ' + error);
                }
            });
        }

        $(document).on('click', '.toggle-password', function () {
            $(this).toggleClass('fa-eye fa-eye-slash');
            var input = $($(this).attr('toggle'));
            if (input.attr('type') == 'password') {
                input.attr('type', 'text');
            } else {
                input.attr('type', 'password');
            }
        });
    </script>
</body>

</html>
