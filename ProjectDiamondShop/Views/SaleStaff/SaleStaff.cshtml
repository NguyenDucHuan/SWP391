<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>Sale Staff Orders</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <style>
        .container {
            margin-top: 50px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            width: 100%;
        }

            .header h2 {
                flex-grow: 1;
                text-align: center;
            }

        .logout-button {
            background-color: #4CAF50;
            color: white;
            border: none;
            padding: 10px 20px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            margin: 4px 2px;
            cursor: pointer;
            border-radius: 12px;
        }

            .logout-button:hover {
                background-color: #45a049;
            }

        .search-container {
            text-align: center;
            margin-bottom: 20px;
        }

            .search-container input[type="text"] {
                width: 100%;
                max-width: 300px;
                padding: 10px;
                margin-right: 10px;
                border: 1px solid #ccc;
                border-radius: 4px;
            }

            .search-container button {
                padding: 10px 20px;
                border: none;
                background-color: #4CAF50;
                color: white;
                cursor: pointer;
                border-radius: 4px;
            }

                .search-container button:hover {
                    background-color: #45a049;
                }

        .order-table-container {
            border: 1px solid #ddd;
            padding: 20px;
            width: 100%;
            max-width: 1200px;
            height: 400px; /* Set the height to a fixed value */
            overflow-y: scroll; /* Enable vertical scrolling */
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        th, td {
            padding: 10px;
            border: 1px solid black;
            text-align: center;
        }

        .notification-bell {
            position: relative;
            margin-left: 20px;
        }

            .notification-bell .notification-count {
                position: absolute;
                top: -5px;
                right: -5px;
                background-color: red;
                color: white;
                border-radius: 50%;
                padding: 2px 6px;
                font-size: 12px;
            }

        .notification-item {
            display: flex;
            align-items: center;
            padding: 10px;
            border-bottom: 1px solid #f1f1f1;
            background-color: #f9f9f9;
            border-radius: 5px;
            margin: 5px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

            .notification-item .icon {
                font-size: 24px;
                margin-right: 10px;
                color: #007bff;
            }

            .notification-item .notification-content {
                flex-grow: 1;
            }

                .notification-item .notification-content strong {
                    display: block;
                    font-size: 14px;
                    color: #333;
                }

                .notification-item .notification-content small {
                    color: #888;
                    font-size: 12px;
                }

            .notification-item.important {
                background-color: #ffefef;
                border-left: 5px solid #ff4d4d;
            }

        .modal-body {
            max-height: 400px;
            overflow-y: auto;
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

            .modal-header .btn-close {
                background: none;
                border: none;
                font-size: 20px;
            }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h2>Sale Staff Orders</h2>
            <form action="@Url.Action("Logout", "Account")" method="post" style="margin: 0;">
                <button type="submit" class="logout-button">Logout</button>
            </form>
            <div class="notification-bell">
                <a class="nav-link" href="#" id="notificationBell" role="button">
                    <i class="fas fa-bell"></i>
                    <span class="notification-count" id="notificationCount">0</span>
                </a>
            </div>
        </div>
        <div class="search-container">
            <form action="@Url.Action("Index", "SaleStaff")" method="get" class="form-inline justify-content-center">
                <input type="text" name="searchOrderId" class="form-control mb-2 mr-sm-2" placeholder="Search by Order ID" value="@Request.QueryString["searchOrderId"]" />
                <button type="submit" class="btn btn-success mb-2">Search</button>
            </form>
        </div>
        <div class="order-table-container">
            <table class="table table-striped table-bordered">
                <thead class="thead-dark">
                    <tr>
                        <th>Order ID</th>
                        <th>Customer ID</th>
                        <th>Delivery Staff ID</th>
                        <th>Total Money</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (ViewBag.Orders != null)
                    {
                        foreach (var order in ViewBag.Orders)
                        {
                            <tr>
                                <td>@order.orderID</td>
                                <td>@order.customerID</td>
                                <td>@order.deliveryStaffID</td>
                                <td>@order.totalMoney</td>
                                <td>@order.status</td>
                                <td>
                                    <form action="@Url.Action("Process", "SaleStaff")" method="post" style="display:inline;">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="orderId" value="@order.orderID" />
                                        <button type="submit" class="btn btn-warning" @(order.status != "Order Placed" ? "disabled" : "")>Process</button>
                                    </form>
                                    <a href="@Url.Action("UpdateOrderDetails", "Order", new { orderId = order.orderID })" class="btn btn-info">View Order</a>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="6">No orders found.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div>
            <a href="@Url.Action("Rebuy", "SaleStaff")" class="rebuy-button">Rebuy Diamonds</a>
        </div>
    </div>

    <!-- Notification Modal -->
    <div class="modal fade" id="notificationsModal" tabindex="-1" aria-labelledby="notificationsModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="notificationsModalLabel">Notifications</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="notificationList">
                        <!-- Notifications will be appended here -->
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>
    $(document).ready(function () {
        // Fetch notification count
        function fetchNotificationCount() {
            $.ajax({
                url: '@Url.Action("GetUnreadNotificationCount", "Notification")',
                type: 'GET',
                success: function (response) {
                    if (response.success) {
                        var notificationCount = response.unreadCount;
                        if (notificationCount > 0) {
                            $('#notificationCount').text(notificationCount);
                        } else {
                            $('#notificationCount').text('');
                        }
                    } else {
                        console.log(response.message);
                    }
                },
                error: function () {
                    console.log('Error retrieving notification count.');
                }
            });
        }

        // Fetch notifications
        function fetchNotifications() {
            $.ajax({
                url: '@Url.Action("GetNotifications", "Notification")',
                type: 'GET',
                success: function (response) {
                    if (response.success) {
                        var notificationList = $('#notificationList');
                        notificationList.empty();
                        response.notifications.forEach(function (notification) {
                            var item = '<div class="notification-item ' +
                                (notification.important ? 'important' : '') + '">' +
                                '<i class="fas fa-exclamation-circle icon"></i>' +
                                '<div class="notification-content">' +
                                '<strong>' + notification.detail + '</strong>' +
                                '<small>' + notification.date + '</small>' +
                                '</div>' +
                                '</div>';
                            notificationList.prepend(item);
                        });
                        $('#notificationsModal').modal('show');
                        markAllNotificationsAsRead();
                    } else {
                        alert(response.message);
                    }
                },
                error: function () {
                    alert('Error retrieving notifications.');
                }
            });
        }

        // Mark all notifications as read
        function markAllNotificationsAsRead() {
            $.ajax({
                url: '@Url.Action("MarkAllAsRead", "Notification")',
                type: 'POST',
                success: function (response) {
                    if (response.success) {
                        $('#notificationCount').text('');
                    } else {
                        console.log(response.message);
                    }
                },
                error: function () {
                    console.log('Error marking notifications as read.');
                }
            });
        }

        // Initial fetch
        fetchNotificationCount();

        // Handle bell icon click
        $('#notificationBell').click(function () {
            fetchNotifications();
        });

        // Poll for new notifications every 60 seconds
        setInterval(fetchNotificationCount, 60000);

        // Handle modal close actions
        $('#notificationsModal').on('hidden.bs.modal', function () {
            markAllNotificationsAsRead();
        });
    });
    </script>
</body>
</html>
