@model List<DiamondShopBOs.tblDiamond>

@{
    List<string> clarities = new List<string>() { "IF", "VVS1", "VVS2", "VS1", "VS2", "SI1", "SI2", "SI3", "I1", "I2", "I3" };
    List<string> cuts = new List<string>() { "Excellent", "Very Good", "Good", "Fair", "Poor", "Ideal" };
    List<string> colors = new List<string>() { "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z" };
    List<string> shapes = new List<string>() { "Round", "Princess", "Cushion", "Emerald", "Oval", "Radiant", "Asscher", "Marquise", "Heart", "Pear" };
    List<string> sortOptions = new List<string>() { "Price (Low to High)", "Price (High to Low)", "Carat Weight (Low to High)", "Carat Weight (High to Low)" };
    ViewBag.Clarities = clarities;
    ViewBag.Cuts = cuts;
    ViewBag.Colors = colors;
    ViewBag.Shapes = shapes;
    ViewBag.SortOptions = new SelectList(sortOptions);
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Diamond Shop</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }

        body {
            background-color: #E9F2EB;
            color: #333;
            display: flex;
            flex-direction: column;
            min-height: 100vh;
        }

        main {
            flex: 1;
        }

        .navbar {
            background: #fff !important;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            padding: 0.5rem 1rem;
            border-radius: 30px;
            margin-bottom: 20px;
            transition: top 0.3s;
            margin: 0 auto;
            max-width: 95%;
        }

            .navbar .navbar-brand {
                color: #28a745 !important;
                font-weight: bold;
                display: flex;
                align-items: center;
            }

                .navbar .navbar-brand img {
                    height: 40px;
                    border-radius: 50%;
                    margin-right: 10px;
                }

            .navbar .nav-link {
                color: #333 !important;
                font-weight: bold;
                margin-right: 20px;
                position: relative;
                padding-bottom: 5px;
            }

                .navbar .nav-link:hover,
                .navbar .nav-link.active {
                    color: #000 !important;
                }

                .navbar .nav-link:not(.dropdown-toggle)::after {
                    content: '';
                    display: block;
                    width: 0;
                    height: 2px;
                    background: #28a745;
                    transition: width .3s;
                    position: absolute;
                    bottom: 0;
                    left: 0;
                }

                .navbar .nav-link:not(.dropdown-toggle):hover::after,
                .navbar .nav-link.not(.dropdown-toggle).active::after {
                    width: 100%;
                }

            .navbar .nav-item .fa {
                font-size: 20px;
                color: #333;
            }

            .navbar .login-btn {
                background: #28a745;
                color: #fff !important;
                border-radius: 50px;
                padding: 0.5rem 1rem;
                font-weight: bold;
                transition: background-color 0.3s;
            }

                .navbar .login-btn:hover {
                    background: #218838;
                }

        .navbar-toggler {
            border: none;
        }

            .navbar-toggler:focus {
                outline: none;
            }

        .nav-item .dropdown-toggle {
            position: relative;
            display: flex;
            align-items: center;
        }

        .dropdown-menu {
            position: absolute;
            transform: translate3d(0px, 0px, 0px);
            border: none;
            background: none;
        }

        .dropdown-toggle::after {
            margin-left: 0.5rem;
            vertical-align: 0.1em;
        }

        .navbar .nav-item.dropdown .dropdown-menu {
            top: 100%;
            left: 0;
            margin-top: 0.5rem;
            background-color: #FDF4F3;
            min-width: 150%;
        }

        @@media (max-width: 992px) {
            .navbar-collapse {
                justify-content: flex-start;
            }

            .navbar-nav {
                flex-direction: column;
                align-items: flex-start;
                width: 100%;
                text-align: right;
            }

            .navbar .nav-link {
                margin-right: 0;
                margin-bottom: 10px;
            }

            .navbar .login-btn {
                margin-bottom: 10px;
            }

            .navbar .nav-item.dropdown .nav-link {
                margin-right: 0;
                margin-bottom: 10px;
            }
        }

        .filter-container {
            background-color: #f9f9f9;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
            margin-top: 100px;
        }

            .filter-container label {
                font-weight: bold;
            }

        .slider-container {
            margin-bottom: 20px;
        }

        .diamond-section {
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            align-items: center;
            padding: 20px;
            border: 1px solid rgba(0, 0, 0, 0.1);
            border-radius: 15px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            background-color: #fff;
            transition: transform 0.3s, box-shadow 0.3s;
            margin-bottom: 30px;
            text-align: center;
            height: 100%;
            max-width: 300px;
            color: #333;
        }

            .diamond-section:hover {
                transform: translateY(-10px);
                box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
            }

            .diamond-section img {
                width: 120px;
                height: 120px;
                border-radius: 50%;
                margin-bottom: 15px;
                border: 2px solid #333;
            }

            .diamond-section h2 {
                font-size: 1.5em;
                margin-bottom: 15px;
                color: #333;
            }

            .diamond-section .description {
                text-align: justify;
                margin-bottom: 20px;
                flex-grow: 1;
                color: #000000;
            }

        .row {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
        }

        .col-lg-4 {
            display: flex;
            justify-content: center;
            margin-bottom: 20px;
        }

        .footer {
            background-color: #fff;
            padding: 20px 0;
            text-align: center;
            color: #333;
            box-shadow: 0 -2px 4px rgba(0, 0, 0, 0.1);
        }

            .footer a {
                color: #00509e;
                text-decoration: none;
                margin: 0 10px;
            }

                .footer a:hover {
                    color: #003f7d;
                    text-decoration: underline;
                }

        .pagination {
            display: flex;
            justify-content: center;
            list-style: none;
            padding: 0;
        }

            .pagination .page-item {
                margin: 0 5px;
            }

                .pagination .page-item .btn-link {
                    color: #00509e;
                    text-decoration: none;
                    padding: 5px 10px;
                    border-radius: 5px;
                    transition: background-color 0.3s;
                }

                    .pagination .page-item .btn-link:hover {
                        background-color: #003f7d;
                        color: #fff;
                    }

                .pagination .page-item.active .btn-link {
                    background-color: #003f7d;
                    color: #fff;
                }

            .pagination .btn-link.selected {
                background-color: #003f7d;
                color: #fff;
            }

        #paginationForm {
            display: flex;
        }

        .range_container {
            position: relative;
            margin-bottom: 20px;
        }

        .slider-values {
            display: flex;
            justify-content: space-between;
            margin-top: 10px;
        }

            .slider-values input {
                display: inline-block;
                width: 45%;
                text-align: center;
                background-color: #f8f9fa;
                padding: 5px;
                border-radius: 5px;
                border: 1px solid #ced4da;
            }

        .ir246-search-noUiSlider {
            margin-bottom: 20px;
        }

        .slider-data .form-group {
            width: 48%;
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-light fixed-top">
        <div class="container-fluid">
            <a class="navbar-brand" href="#">
                <img src="/Image/HomePage/Logo/Hand with crystal_ Mystical, esoteric, magic or healing crystal_.jpg" alt="The Diamond Shop" height="40">
                <span>The Diamond Shop</span>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse justify-content-end" id="navbarNav">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("Index", "Home")">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("About","Home")">About</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("Contact", "Home")">Contact Us</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("Index", "Diamonds")">Shop</a>
                    </li>
                    @if (Session["IsAuthenticated"] != null && (bool)Session["IsAuthenticated"])
                    {
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownCart" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="fas fa-shopping-cart"></i>
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="navbarDropdownCart">
                                <li><a class="dropdown-item" href="@Url.Action("Index", "Cart")">View Cart</a></li>
                                <li><a class="dropdown-item" href="@Url.Action("ViewOrders", "Home")">View Orders</a></li>
                            </ul>
                        </li>
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownProfile" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="fas fa-user"></i>
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="navbarDropdownProfile">
                                <li><a class="dropdown-item" href="@Url.Action("EditProfile", "ViewProfile")">View Profile</a></li>
                                <li><a class="dropdown-item" href="@Url.Action("WarrantyDetails", "Warranty")">Warranty</a></li>
                                <li><a class="dropdown-item" href="@Url.Action("Logout", "Login")">Logout</a></li>
                            </ul>
                        </li>
                    }
                    else
                    {
                        <li class="nav-item">
                            <a class="nav-link login-btn" href="@Url.Action("Index", "Login")">Login</a>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </nav>

    <main role="main" class="pb-3">
        <div class="container">
            <div class="filter-container">
                @using (Html.BeginForm("Filter", "Diamonds", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <div class="row">
                        <div class="form-group col-md-12">
                            <label for="SearchTerm">Search Term:</label>
                            <input type="text" id="SearchTerm" name="SearchTerm" value="@ViewBag.SearchTerm" class="form-control" />
                        </div>
                        <div class="form-group col-md-3">
                            <label for="Clarity">Clarity:</label>
                            <select id="Clarity" name="Clarity" class="form-control">
                                <option value="">-- All --</option>
                                @foreach (var clarity in clarities)
                                {
                                    <option value="@clarity" @(clarity == ViewBag.SelectedClarity ? "selected" : "")>@clarity</option>
                                }
                            </select>
                        </div>
                        <div class="form-group col-md-3">
                            <label for="Cut">Cut:</label>
                            <select id="Cut" name="Cut" class="form-control">
                                <option value="">-- All --</option>
                                @foreach (var cut in cuts)
                                {
                                    <option value="@cut" @(cut == ViewBag.SelectedCut ? "selected" : "")>@cut</option>
                                }
                            </select>
                        </div>
                        <div class="form-group col-md-3">
                            <label for="Color">Color:</label>
                            <select id="Color" name="Color" class="form-control">
                                <option value="">-- All --</option>
                                @foreach (var color in colors)
                                {
                                    <option value="@color" @(color == ViewBag.SelectedColor ? "selected" : "")>@color</option>
                                }
                            </select>
                        </div>
                        <div class="form-group col-md-3">
                            <label for="Shape">Shape:</label>
                            <select id="Shape" name="Shape" class="form-control">
                                <option value="">-- All --</option>
                                @foreach (var shape in shapes)
                                {
                                    <option value="@shape" @(shape == ViewBag.SelectedShape ? "selected" : "")>@shape</option>
                                }
                            </select>
                        </div>
                        <div class="form-group col-md-6">
                            <div class="ir246-search-noUiSlider">
                                <label for="price-slider">Diamond Price</label>
                                <div id="price-slider" class="range-slider">
                                    <input type="range" class="min-val price" min="0" max="50000" value="0" step="100" name="MinPrice">
                                    <input type="range" class="max-val price" min="0" max="50000" value="50000" step="100" name="MaxPrice">
                                    <div class="slider-track price"></div>
                                    <div class="min-tooltip price"></div>
                                    <div class="max-tooltip price"></div>
                                </div>
                                <div class="slider-values">
                                    <input type="text" class="min-input price" value="0">
                                    <input type="text" class="max-input price" value="50000">
                                </div>
                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            <div class="ir246-search-noUiSlider">
                                <label for="carat-slider">Carat</label>
                                <div id="carat-slider" class="range-slider">
                                    <input type="range" class="min-val carat" min="0.25" max="33.75" value="0.25" step="0.01" name="MinCaratWeight">
                                    <input type="range" class="max-val carat" min="0.25" max="33.75" value="33.75" step="0.01" name="MaxCaratWeight">
                                    <div class="slider-track carat"></div>
                                    <div class="min-tooltip carat"></div>
                                    <div class="max-tooltip carat"></div>
                                </div>
                                <div class="slider-values">
                                    <input type="text" class="min-input carat" value="0.25">
                                    <input type="text" class="max-input carat" value="33.75">
                                </div>
                            </div>
                        </div>
                        <div class="form-group col-md-12">
                            <div class="d-flex justify-content-between">
                                @Html.DropDownList("SortBy", (SelectList)ViewBag.SortOptions, new { @class = "form-control" })
                                <button type="submit" class="btn btn-primary">Filter</button>
                                <a class="btn btn-secondary" href="@Url.Action("Index", "Diamonds")">Reset</a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
        <section id="new-arrivals" class="new-arrivals">
            <div class="container">
                <div class="new-arrivals-content">
                    <div class="row">
                        @foreach (var item in Model)
                        {
                            string[] imagepart = item.diamondImagePath.Split('|');
                            <div class="col-md-3 col-sm-4 mb-4">
                                <a href="@Url.Action("ViewDiamond", "Diamonds", new { id = item.diamondID })">
                                    <div class="single-new-arrival">
                                        <div class="single-new-arrival-bg">
                                            <img src="@imagepart[0]" alt="new-arrivals images" style="width:100%">
                                            <div class="single-new-arrival-bg-overlay"></div>
                                        </div>
                                        <h4 class="mt-2"><a href="@Url.Action("ViewDiamond", "Diamonds", new { id = item.diamondID })">@item.diamondName</a></h4>
                                        <p class="arrival-product-price">$@item.diamondPrice</p>
                                    </div>
                                </a>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </section>

        @{
            int startPage = Math.Max(1, ViewBag.CurrentPage - 2);
            int endPage = Math.Min(ViewBag.NumOfPage, ViewBag.CurrentPage + 2);
        }

        <div class="container">
            <ul class="pagination row justify-content-center" style="display:flex">
                @using (Html.BeginForm("Filter", "Diamonds", FormMethod.Post, new { id = "paginationForm" }))
                {
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="page" id="pageNumber" value="" />
                    <input type="hidden" name="SearchTerm" value="@ViewBag.SearchTerm" />
                    <input type="hidden" name="Clarity" value="@ViewBag.SelectedClarity" />
                    <input type="hidden" name="Cut" value="@ViewBag.SelectedCut" />
                    <input type="hidden" name="Color" value="@ViewBag.SelectedColor" />
                    <input type="hidden" name="Shape" value="@ViewBag.SelectedShape" />
                    <input type="hidden" name="MinPrice" value="@ViewBag.MinPrice" />
                    <input type="hidden" name="MaxPrice" value="@ViewBag.MaxPrice" />
                    <input type="hidden" name="MinCaratWeight" value="@ViewBag.MinCaratWeight" />
                    <input type="hidden" name="MaxCaratWeight" value="@ViewBag.MaxCaratWeight" />
                    if (ViewBag.CurrentPage > 3)
                    {
                        <li class="page-item">
                            <button type="button" class="btn btn-link" onclick="setPageValue(1);"><span class="lnr lnr-chevron-left"> </span></button>
                        </li>
                    }
                    for (int i = startPage; i <= endPage; i++)
                    {
                        <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                            <button type="button" class="btn btn-link @(i == ViewBag.CurrentPage ? "selected" : "")" onclick="setPageValue(@i);">@i</button>
                        </li>
                    }
                    if (ViewBag.CurrentPage < ViewBag.NumOfPage - 5)
                    {
                        <li class="page-item">
                            <button type="button" class="btn btn-link" onclick="setPageValue(@ViewBag.NumOfPage);">Last</button>
                        </li>
                    }
                }
            </ul>
        </div>

        <script>
            function setPageValue(page) {
                document.getElementById("pageNumber").value = page;
                document.getElementById("paginationForm").submit();
            }
        </script>

        @Html.Hidden("CurrentPage", (int)ViewBag.CurrentPage)
        @Html.Hidden("PageSize", 12)
        </div>
    </main>

    <footer class="footer">
        <div class="container text-center">
            <p><a href="#">Back To Top</a></p>
            <p>&copy; 2024 The Diamond Shop. All rights reserved.</p>
            <p>
                <a href="#">Terms of Service</a> |
                <a href="#">Privacy Policy</a> |
                <a href="#">Refund Policy</a>
            </p>
        </div>
    </footer>

    <div class="modal fade" id="loginSuccessModal" tabindex="-1" role="dialog" aria-labelledby="loginSuccessModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header" style="color: black">
                    <h5 class="modal-title" id="loginSuccessModalLabel">Login Successful</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="close" style="margin-left:auto;">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" style="color: black">
                    <p>Welcome, <span id="userName"></span>!</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" id="modalOkButton">OK</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.6/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        window.onload = function () {
            slideMinPrice();
            slideMaxPrice();
            slideMinCarat();
            slideMaxCarat();
        };

        // Price Slider
        const minPriceVal = document.querySelector(".min-val.price");
        const maxPriceVal = document.querySelector(".max-val.price");
        const priceInputMin = document.querySelector(".min-input.price");
        const priceInputMax = document.querySelector(".max-input.price");
        const minTooltipPrice = document.querySelector(".min-tooltip.price");
        const maxTooltipPrice = document.querySelector(".max-tooltip.price");
        const minGapPrice = 1500;
        const rangePrice = document.querySelector(".slider-track.price");
        const sliderMinValuePrice = parseInt(minPriceVal.min);
        const sliderMaxValuePrice = parseInt(maxPriceVal.max);

        function slideMinPrice() {
            let gap = parseInt(maxPriceVal.value) - parseInt(minPriceVal.value);
            if (gap < minGapPrice) {
                minPriceVal.value = parseInt(maxPriceVal.value) - minGapPrice;
            }
            priceInputMin.value = minPriceVal.value;
            setAreaPrice();
        }

        function slideMaxPrice() {
            let gap = parseInt(maxPriceVal.value) - parseInt(minPriceVal.value);
            if (gap < minGapPrice) {
                maxPriceVal.value = parseInt(minPriceVal.value) + minGapPrice;
            }
            priceInputMax.value = maxPriceVal.value;
            setAreaPrice();
        }

        function setAreaPrice() {
            rangePrice.style.left = `${((minPriceVal.value - sliderMinValuePrice) / (sliderMaxValuePrice - sliderMinValuePrice)) * 100
                }%`;
            rangePrice.style.right = `${100 -
                ((maxPriceVal.value - sliderMinValuePrice) / (sliderMaxValuePrice - sliderMinValuePrice)) * 100
                }%`;
            minTooltipPrice.style.left = (minPriceVal.value / sliderMaxValuePrice) * 100 + "%";
            maxTooltipPrice.style.right = 100 - (maxPriceVal.value / sliderMaxValuePrice) * 100 + "%";
        }

        function setMinInputPrice() {
            let minPrice = parseInt(priceInputMin.value);
            if (minPrice < sliderMinValuePrice) {
                minPrice = sliderMinValuePrice;
            } else if (minPrice > parseInt(maxPriceVal.value) - minGapPrice) {
                minPrice = parseInt(maxPriceVal.value) - minGapPrice;
            }
            minPriceVal.value = minPrice;
            slideMinPrice();
        }

        function setMaxInputPrice() {
            let maxPrice = parseInt(priceInputMax.value);
            if (maxPrice > sliderMaxValuePrice) {
                maxPrice = sliderMaxValuePrice;
            } else if (maxPrice < parseInt(minPriceVal.value) + minGapPrice) {
                maxPrice = parseInt(minPriceVal.value) + minGapPrice;
            }
            maxPriceVal.value = maxPrice;
            slideMaxPrice();
        }

        priceInputMin.addEventListener("input", setMinInputPrice);
        priceInputMax.addEventListener("input", setMaxInputPrice);
        minPriceVal.addEventListener("input", slideMinPrice);
        maxPriceVal.addEventListener("input", slideMaxPrice);

        // Carat Slider
        const minCaratVal = document.querySelector(".min-val.carat");
        const maxCaratVal = document.querySelector(".max-val.carat");
        const caratInputMin = document.querySelector(".min-input.carat");
        const caratInputMax = document.querySelector(".max-input.carat");
        const minTooltipCarat = document.querySelector(".min-tooltip.carat");
        const maxTooltipCarat = document.querySelector(".max-tooltip.carat");
        const minGapCarat = 0.01;
        const rangeCarat = document.querySelector(".slider-track.carat");
        const sliderMinValueCarat = parseFloat(minCaratVal.min);
        const sliderMaxValueCarat = parseFloat(maxCaratVal.max);

        function slideMinCarat() {
            let gap = parseFloat(maxCaratVal.value) - parseFloat(minCaratVal.value);
            if (gap < minGapCarat) {
                minCaratVal.value = parseFloat(maxCaratVal.value) - minGapCarat;
            }
            caratInputMin.value = minCaratVal.value;
            setAreaCarat();
        }

        function slideMaxCarat() {
            let gap = parseFloat(maxCaratVal.value) - parseFloat(minCaratVal.value);
            if (gap < minGapCarat) {
                maxCaratVal.value = parseFloat(minCaratVal.value) + minGapCarat;
            }
            caratInputMax.value = maxCaratVal.value;
            setAreaCarat();
        }

        function setAreaCarat() {
            rangeCarat.style.left = `${((minCaratVal.value - sliderMinValueCarat) / (sliderMaxValueCarat - sliderMinValueCarat)) * 100
                }%`;
            rangeCarat.style.right = `${100 -
                ((maxCaratVal.value - sliderMinValueCarat) / (sliderMaxValueCarat - sliderMinValueCarat)) * 100
                }%`;
            minTooltipCarat.style.left = (minCaratVal.value / sliderMaxValueCarat) * 100 + "%";
            maxTooltipCarat.style.right = 100 - (maxCaratVal.value / sliderMaxValueCarat) * 100 + "%";
        }

        function setMinInputCarat() {
            let minCarat = parseFloat(caratInputMin.value);
            if (minCarat < sliderMinValueCarat) {
                minCarat = sliderMinValueCarat;
            } else if (minCarat > parseFloat(maxCaratVal.value) - minGapCarat) {
                minCarat = parseFloat(maxCaratVal.value) - minGapCarat;
            }
            minCaratVal.value = minCarat;
            slideMinCarat();
        }

        function setMaxInputCarat() {
            let maxCarat = parseFloat(caratInputMax.value);
            if (maxCarat > sliderMaxValueCarat) {
                maxCarat = sliderMaxValueCarat;
            } else if (maxCarat < parseFloat(minCaratVal.value) + minGapCarat) {
                maxCarat = parseFloat(minCaratVal.value) + minGapCarat;
            }
            maxCaratVal.value = maxCarat;
            slideMaxCarat();
        }

        caratInputMin.addEventListener("input", setMinInputCarat);
        caratInputMax.addEventListener("input", setMaxInputCarat);
        minCaratVal.addEventListener("input", slideMinCarat);
        maxCaratVal.addEventListener("input", slideMaxCarat);

        $(document).ready(function () {
            var successMessage = '@ViewBag.SuccessMessage';
            var userName = '@ViewBag.UserName';
            if (successMessage) {
                $('#userName').text(userName);
                $('#loginSuccessModal').modal('show');
                $('#modalOkButton').click(function () {
                    window.location.href = '@Url.Action("Index", "Home")';
                });
            }

            // Hide and show navbar on scroll
            var lastScrollTop = 0;
            $(window).scroll(function () {
                var st = $(this).scrollTop();
                if (st > lastScrollTop) {
                    // Scroll Down
                    $('.navbar').css('top', '-80px');
                } else {
                    // Scroll Up
                    $('.navbar').css('top', '0');
                }
                lastScrollTop = st;
            });
        });
    </script>
</body>
</html>
