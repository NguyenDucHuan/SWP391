@model DiamondShopBOs.tblDiamond
@{
    ViewBag.Title = "Diamond Details";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

<link href="~/Content/ProductCss/linearicons.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" rel="stylesheet" />

<div class="container" style="margin-top:39px;">
    <a href="@Url.Action("Index", "Diamonds")" style="text-decoration: none; color: #151542; padding-bottom:5px;">
        <span class="lnr lnr-exit"></span>Back to Gallery
    </a>
    <div class="row">
        <div class="col-md-6">
            <div id="mainImageContainer" style="width: 100%; max-width: 500px; height: 400px; overflow: hidden; display: flex; align-items: center; justify-content: center; background-color: #f8f8f8; margin-bottom: 20px;">
                <img id="mainImage" src="@Model.diamondImagePath.Split('|')[0]" alt="@Model.diamondName" class="img-responsive" style="max-width: 100%; max-height: 100%;">
            </div>
            <div class="thumbnail-container" style="display: flex; flex-wrap: wrap;">
                @foreach (var imagePath in Model.diamondImagePath.Split('|').Select((value, index) => new { value, index }))
                {
                    <button class="thumbnail-button" data-image="@imagePath.value" style="border:none; background:none; margin: 5px; padding: 0;">
                        <img src="@imagePath.value" alt="@Model.diamondName @imagePath.index" class="img-thumbnail" style="width: 100px; height: 100px; object-fit: cover;">
                    </button>
                }
            </div>
        </div>
        <div class="col-md-6">
            <h2 style="color: #151542; font-size:39px; font-family: Cambria, Geneva, Verdana, sans-serif; margin:auto">@Model.diamondName</h2>
            <p>@Model.diamondDescription</p>
            <p><strong>Price:</strong> $@Model.diamondPrice</p>
            <p><strong>Clarity:</strong> @Model.clarityID</p>
            <p><strong>Cut:</strong> @Model.cutID</p>
            <p><strong>Color:</strong> @Model.colorID</p>
            <p><strong>Carat Weight:</strong> @Model.caratWeight</p>
            @using (Html.BeginForm("AddToCart", "Cart", FormMethod.Post, new { id = "add-to-cart-form" }))
            {
                @Html.Hidden("diamondID", Model.diamondID)
                @Html.Hidden("accentStoneID", "0", new { id = "accentStoneID" })
                @Html.Hidden("settingID", "0", new { id = "settingID" })
                <button type="button" id="add-to-cart-button" class="transparent-button">
                    <span class="lnr lnr-cart" style="color: #f0f0f0;"></span>Add to Cart
                </button>
            }
        </div>
    </div>
</div>

<!-- Modal for selecting accentStone and setting -->
<div id="selectionModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Select Accent Stone and Setting</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="accentStone">Accent Stone</label>
                    <select id="accentStone" class="form-control select2">
                        <option value="0" data-image="/path/to/default-image.jpg">No accent stone</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="setting">Setting</label>
                    <select id="setting" class="form-control select2">
                        <option value="0" data-image="/path/to/default-image.jpg">No setting</option>
                    </select>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" id="confirm-selection" class="btn btn-primary">Confirm</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script>
        $(document).ready(function () {
            $('.select2').select2({
                templateResult: formatState,
                templateSelection: formatState
            });

            // Function to format the select2 option with image
            function formatState(state) {
                if (!state.id) {
                    return state.text;
                }
                var $state = $(
                    '<span><img src="' + state.element.getAttribute('data-image') + '" class="img-flag" style="width: 20px; height: 20px; margin-right: 10px;" /> ' + state.text + '</span>'
                );
                return $state;
            }

            // Change main image when thumbnail is clicked
            $(".thumbnail-button").click(function () {
                var newImage = $(this).data('image');
                $("#mainImage").attr('src', newImage);
            });

            // Open modal when add to cart button is clicked
            $("#add-to-cart-button").click(function () {
                // Load settings and accent stones
                loadSettings();
                loadAccentStones();

                $('#selectionModal').modal('show');
            });

            // Load settings
            function loadSettings() {
                $.ajax({
                    url: '@Url.Action("GetSettings", "Diamonds")',
                    type: 'GET',
                    success: function (data) {
                        var settingsSelect = $("#setting");
                        settingsSelect.empty();
                        settingsSelect.append('<option value="0" data-image="/path/to/default-image.jpg">No setting</option>');
                        $.each(data, function (index, setting) {
                            var option = new Option(setting.settingType + " - " + setting.material + " - $" + setting.priceTax, setting.settingID);
                            $(option).attr('data-image', setting.imagePath);
                            settingsSelect.append(option);
                        });
                        settingsSelect.trigger('change');
                    },
                    error: function () {
                        alert("Failed to load settings.");
                    }
                });
            }

            // Load accent stones
            function loadAccentStones() {
                $.ajax({
                    url: '@Url.Action("GetAccentStones", "Diamonds")',
                    type: 'GET',
                    success: function (data) {
                        var accentStoneSelect = $("#accentStone");
                        accentStoneSelect.empty();
                        accentStoneSelect.append('<option value="0" data-image="/path/to/default-image.jpg">No accent stone</option>');
                        $.each(data, function (index, stone) {
                            var option = new Option(stone.shape + " - " + stone.caratWeight + " carat - $" + stone.price, stone.accentStoneID);
                            $(option).attr('data-image', stone.imagePath);
                            accentStoneSelect.append(option);
                        });
                        accentStoneSelect.trigger('change');
                    },
                    error: function () {
                        alert("Failed to load accent stones.");
                    }
                });
            }

            // Handle setting selection change
            $("#setting").change(function () {
                var setting = $(this).val();
                if (setting == "0") {
                    $("#accentStone").val("0").trigger('change').prop('disabled', true);
                } else {
                    $("#accentStone").prop('disabled', false);
                }
            });

            // Confirm selection and submit form
            $("#confirm-selection").click(function () {
                var accentStone = $("#accentStone").val();
                var setting = $("#setting").val();

                // Ensure accent stone cannot be selected if no setting is selected
                if (setting == "0" && accentStone != "0") {
                    alert("You must select a setting before choosing an accent stone.");
                    return;
                }

                // Set accentStoneID and settingID in hidden fields
                $("#accentStoneID").val(accentStone);
                $("#settingID").val(setting);

                // Submit the form
                $("#add-to-cart-form").submit();
            });
        });
    </script>
}
